/*
* Mesa 3-D graphics library
* Version:  6.3
*
* Copyright (C) 1999-2005  Brian Paul   All Rights Reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a
* copy of this software and associated documentation files (the "Software"),
* to deal in the Software without restriction, including without limitation
* the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included
* in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
* BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
* AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

//==============================================================================
//  DSFML specifics
//==============================================================================

module dsfml.GL.gl;

version (Windows)
{
    version(build)
    {
        pragma(link, "opengl32");
    }
}
version (linux)
{
    version(build)
    {
        pragma(link, "GL");
    }
}

//==============================================================================
//==============================================================================


/*
 * Constants
 */
// Boolean values
const ubyte GL_FALSE				= 0x0;
const ubyte GL_TRUE				= 0x1;

// Data types
const GLuint GL_BYTE				= 0x1400;
const GLuint GL_UNSIGNED_BYTE			= 0x1401;
const GLuint GL_SHORT				= 0x1402;
const GLuint GL_UNSIGNED_SHORT			= 0x1403;
const GLuint GL_INT				= 0x1404;
const GLuint GL_UNSIGNED_INT			= 0x1405;
const GLuint GL_FLOAT				= 0x1406;
const GLuint GL_DOUBLE				= 0x140A;
const GLuint GL_2_BYTES				= 0x1407;
const GLuint GL_3_BYTES				= 0x1408;
const GLuint GL_4_BYTES				= 0x1409;

// Primitives
const GLuint GL_POINTS				= 0x0000;
const GLuint GL_LINES				= 0x0001;
const GLuint GL_LINE_LOOP			= 0x0002;
const GLuint GL_LINE_STRIP			= 0x0003;
const GLuint GL_TRIANGLES			= 0x0004;
const GLuint GL_TRIANGLE_STRIP			= 0x0005;
const GLuint GL_TRIANGLE_FAN			= 0x0006;
const GLuint GL_QUADS				= 0x0007;
const GLuint GL_QUAD_STRIP			= 0x0008;
const GLuint GL_POLYGON				= 0x0009;

// Vertex Arrays
const GLuint GL_VERTEX_ARRAY			= 0x8074;
const GLuint GL_NORMAL_ARRAY			= 0x8075;
const GLuint GL_COLOR_ARRAY			= 0x8076;
const GLuint GL_INDEX_ARRAY			= 0x8077;
const GLuint GL_TEXTURE_COORD_ARRAY		= 0x8078;
const GLuint GL_EDGE_FLAG_ARRAY			= 0x8079;
const GLuint GL_VERTEX_ARRAY_SIZE		= 0x807A;
const GLuint GL_VERTEX_ARRAY_TYPE		= 0x807B;
const GLuint GL_VERTEX_ARRAY_STRIDE		= 0x807C;
const GLuint GL_NORMAL_ARRAY_TYPE		= 0x807E;
const GLuint GL_NORMAL_ARRAY_STRIDE		= 0x807F;
const GLuint GL_COLOR_ARRAY_SIZE		= 0x8081;
const GLuint GL_COLOR_ARRAY_TYPE		= 0x8082;
const GLuint GL_COLOR_ARRAY_STRIDE		= 0x8083;
const GLuint GL_INDEX_ARRAY_TYPE		= 0x8085;
const GLuint GL_INDEX_ARRAY_STRIDE		= 0x8086;
const GLuint GL_TEXTURE_COORD_ARRAY_SIZE	= 0x8088;
const GLuint GL_TEXTURE_COORD_ARRAY_TYPE	= 0x8089;
const GLuint GL_TEXTURE_COORD_ARRAY_STRIDE	= 0x808A;
const GLuint GL_EDGE_FLAG_ARRAY_STRIDE		= 0x808C;
const GLuint GL_VERTEX_ARRAY_POINTER		= 0x808E;
const GLuint GL_NORMAL_ARRAY_POINTER		= 0x808F;
const GLuint GL_COLOR_ARRAY_POINTER		= 0x8090;
const GLuint GL_INDEX_ARRAY_POINTER		= 0x8091;
const GLuint GL_TEXTURE_COORD_ARRAY_POINTER	= 0x8092;
const GLuint GL_EDGE_FLAG_ARRAY_POINTER		= 0x8093;
const GLuint GL_V2F				= 0x2A20;
const GLuint GL_V3F				= 0x2A21;
const GLuint GL_C4UB_V2F			= 0x2A22;
const GLuint GL_C4UB_V3F			= 0x2A23;
const GLuint GL_C3F_V3F				= 0x2A24;
const GLuint GL_N3F_V3F				= 0x2A25;
const GLuint GL_C4F_N3F_V3F			= 0x2A26;
const GLuint GL_T2F_V3F				= 0x2A27;
const GLuint GL_T4F_V4F				= 0x2A28;
const GLuint GL_T2F_C4UB_V3F			= 0x2A29;
const GLuint GL_T2F_C3F_V3F			= 0x2A2A;
const GLuint GL_T2F_N3F_V3F			= 0x2A2B;
const GLuint GL_T2F_C4F_N3F_V3F			= 0x2A2C;
const GLuint GL_T4F_C4F_N3F_V4F			= 0x2A2D;

// Matrix Mode
const GLuint GL_MATRIX_MODE			= 0x0BA0;
const GLuint GL_MODELVIEW			= 0x1700;
const GLuint GL_PROJECTION			= 0x1701;
const GLuint GL_TEXTURE				= 0x1702;

// Points
const GLuint GL_POINT_SMOOTH			= 0x0B10;
const GLuint GL_POINT_SIZE			= 0x0B11;
const GLuint GL_POINT_SIZE_GRANULARITY		= 0x0B13;
const GLuint GL_POINT_SIZE_RANGE		= 0x0B12;

// Lines
const GLuint GL_LINE_SMOOTH			= 0x0B20;
const GLuint GL_LINE_STIPPLE			= 0x0B24;
const GLuint GL_LINE_STIPPLE_PATTERN		= 0x0B25;
const GLuint GL_LINE_STIPPLE_REPEAT		= 0x0B26;
const GLuint GL_LINE_WIDTH			= 0x0B21;
const GLuint GL_LINE_WIDTH_GRANULARITY		= 0x0B23;
const GLuint GL_LINE_WIDTH_RANGE		= 0x0B22;

// Polygons
const GLuint GL_POINT				= 0x1B00;
const GLuint GL_LINE				= 0x1B01;
const GLuint GL_FILL				= 0x1B02;
const GLuint GL_CW				= 0x0900;
const GLuint GL_CCW				= 0x0901;
const GLuint GL_FRONT				= 0x0404;
const GLuint GL_BACK				= 0x0405;
const GLuint GL_POLYGON_MODE			= 0x0B40;
const GLuint GL_POLYGON_SMOOTH			= 0x0B41;
const GLuint GL_POLYGON_STIPPLE			= 0x0B42;
const GLuint GL_EDGE_FLAG			= 0x0B43;
const GLuint GL_CULL_FACE			= 0x0B44;
const GLuint GL_CULL_FACE_MODE			= 0x0B45;
const GLuint GL_FRONT_FACE			= 0x0B46;
const GLuint GL_POLYGON_OFFSET_FACTOR		= 0x8038;
const GLuint GL_POLYGON_OFFSET_UNITS		= 0x2A00;
const GLuint GL_POLYGON_OFFSET_POINT		= 0x2A01;
const GLuint GL_POLYGON_OFFSET_LINE		= 0x2A02;
const GLuint GL_POLYGON_OFFSET_FILL		= 0x8037;

// Display Lists
const GLuint GL_COMPILE				= 0x1300;
const GLuint GL_COMPILE_AND_EXECUTE		= 0x1301;
const GLuint GL_LIST_BASE			= 0x0B32;
const GLuint GL_LIST_INDEX			= 0x0B33;
const GLuint GL_LIST_MODE			= 0x0B30;

// Depth buffer
const GLuint GL_NEVER				= 0x0200;
const GLuint GL_LESS				= 0x0201;
const GLuint GL_EQUAL				= 0x0202;
const GLuint GL_LEQUAL				= 0x0203;
const GLuint GL_GREATER				= 0x0204;
const GLuint GL_NOTEQUAL			= 0x0205;
const GLuint GL_GEQUAL				= 0x0206;
const GLuint GL_ALWAYS				= 0x0207;
const GLuint GL_DEPTH_TEST			= 0x0B71;
const GLuint GL_DEPTH_BITS			= 0x0D56;
const GLuint GL_DEPTH_CLEAR_VALUE		= 0x0B73;
const GLuint GL_DEPTH_FUNC			= 0x0B74;
const GLuint GL_DEPTH_RANGE			= 0x0B70;
const GLuint GL_DEPTH_WRITEMASK			= 0x0B72;
const GLuint GL_DEPTH_COMPONENT			= 0x1902;

// Lighting
const GLuint GL_LIGHTING			= 0x0B50;
const GLuint GL_LIGHT0				= 0x4000;
const GLuint GL_LIGHT1				= 0x4001;
const GLuint GL_LIGHT2				= 0x4002;
const GLuint GL_LIGHT3				= 0x4003;
const GLuint GL_LIGHT4				= 0x4004;
const GLuint GL_LIGHT5				= 0x4005;
const GLuint GL_LIGHT6				= 0x4006;
const GLuint GL_LIGHT7				= 0x4007;
const GLuint GL_SPOT_EXPONENT			= 0x1205;
const GLuint GL_SPOT_CUTOFF			= 0x1206;
const GLuint GL_CONSTANT_ATTENUATION		= 0x1207;
const GLuint GL_LINEAR_ATTENUATION		= 0x1208;
const GLuint GL_QUADRATIC_ATTENUATION		= 0x1209;
const GLuint GL_AMBIENT				= 0x1200;
const GLuint GL_DIFFUSE				= 0x1201;
const GLuint GL_SPECULAR			= 0x1202;
const GLuint GL_SHININESS			= 0x1601;
const GLuint GL_EMISSION			= 0x1600;
const GLuint GL_POSITION			= 0x1203;
const GLuint GL_SPOT_DIRECTION			= 0x1204;
const GLuint GL_AMBIENT_AND_DIFFUSE		= 0x1602;
const GLuint GL_COLOR_INDEXES			= 0x1603;
const GLuint GL_LIGHT_MODEL_TWO_SIDE		= 0x0B52;
const GLuint GL_LIGHT_MODEL_LOCAL_VIEWER	= 0x0B51;
const GLuint GL_LIGHT_MODEL_AMBIENT		= 0x0B53;
const GLuint GL_FRONT_AND_BACK			= 0x0408;
const GLuint GL_SHADE_MODEL			= 0x0B54;
const GLuint GL_FLAT				= 0x1D00;
const GLuint GL_SMOOTH				= 0x1D01;
const GLuint GL_COLOR_MATERIAL			= 0x0B57;
const GLuint GL_COLOR_MATERIAL_FACE		= 0x0B55;
const GLuint GL_COLOR_MATERIAL_PARAMETER	= 0x0B56;
const GLuint GL_NORMALIZE			= 0x0BA1;

// User clipping planes
const GLuint GL_CLIP_PLANE0			= 0x3000;
const GLuint GL_CLIP_PLANE1			= 0x3001;
const GLuint GL_CLIP_PLANE2			= 0x3002;
const GLuint GL_CLIP_PLANE3			= 0x3003;
const GLuint GL_CLIP_PLANE4			= 0x3004;
const GLuint GL_CLIP_PLANE5			= 0x3005;

// Accumulation buffer
const GLuint GL_ACCUM_RED_BITS			= 0x0D58;
const GLuint GL_ACCUM_GREEN_BITS		= 0x0D59;
const GLuint GL_ACCUM_BLUE_BITS			= 0x0D5A;
const GLuint GL_ACCUM_ALPHA_BITS		= 0x0D5B;
const GLuint GL_ACCUM_CLEAR_VALUE		= 0x0B80;
const GLuint GL_ACCUM				= 0x0100;
const GLuint GL_ADD				= 0x0104;
const GLuint GL_LOAD				= 0x0101;
const GLuint GL_MULT				= 0x0103;
const GLuint GL_RETURN				= 0x0102;

// Alpha testing
const GLuint GL_ALPHA_TEST			= 0x0BC0;
const GLuint GL_ALPHA_TEST_REF			= 0x0BC2;
const GLuint GL_ALPHA_TEST_FUNC			= 0x0BC1;

// Blending
const GLuint GL_BLEND				= 0x0BE2;
const GLuint GL_BLEND_SRC			= 0x0BE1;
const GLuint GL_BLEND_DST			= 0x0BE0;
const GLuint GL_ZERO				= 0x0;
const GLuint GL_ONE				= 0x1;
const GLuint GL_SRC_COLOR			= 0x0300;
const GLuint GL_ONE_MINUS_SRC_COLOR		= 0x0301;
const GLuint GL_SRC_ALPHA			= 0x0302;
const GLuint GL_ONE_MINUS_SRC_ALPHA		= 0x0303;
const GLuint GL_DST_ALPHA			= 0x0304;
const GLuint GL_ONE_MINUS_DST_ALPHA		= 0x0305;
const GLuint GL_DST_COLOR			= 0x0306;
const GLuint GL_ONE_MINUS_DST_COLOR		= 0x0307;
const GLuint GL_SRC_ALPHA_SATURATE		= 0x0308;

// Render Mode
const GLuint GL_FEEDBACK			= 0x1C01;
const GLuint GL_RENDER				= 0x1C00;
const GLuint GL_SELECT				= 0x1C02;

// Feedback
const GLuint GL_2D				= 0x0600;
const GLuint GL_3D				= 0x0601;
const GLuint GL_3D_COLOR			= 0x0602;
const GLuint GL_3D_COLOR_TEXTURE		= 0x0603;
const GLuint GL_4D_COLOR_TEXTURE		= 0x0604;
const GLuint GL_POINT_TOKEN			= 0x0701;
const GLuint GL_LINE_TOKEN			= 0x0702;
const GLuint GL_LINE_RESET_TOKEN		= 0x0707;
const GLuint GL_POLYGON_TOKEN			= 0x0703;
const GLuint GL_BITMAP_TOKEN			= 0x0704;
const GLuint GL_DRAW_PIXEL_TOKEN		= 0x0705;
const GLuint GL_COPY_PIXEL_TOKEN		= 0x0706;
const GLuint GL_PASS_THROUGH_TOKEN		= 0x0700;
const GLuint GL_FEEDBACK_BUFFER_POINTER		= 0x0DF0;
const GLuint GL_FEEDBACK_BUFFER_SIZE		= 0x0DF1;
const GLuint GL_FEEDBACK_BUFFER_TYPE		= 0x0DF2;

// Selection
const GLuint GL_SELECTION_BUFFER_POINTER	= 0x0DF3;
const GLuint GL_SELECTION_BUFFER_SIZE		= 0x0DF4;

// Fog
const GLuint GL_FOG				= 0x0B60;
const GLuint GL_FOG_MODE			= 0x0B65;
const GLuint GL_FOG_DENSITY			= 0x0B62;
const GLuint GL_FOG_COLOR			= 0x0B66;
const GLuint GL_FOG_INDEX			= 0x0B61;
const GLuint GL_FOG_START			= 0x0B63;
const GLuint GL_FOG_END				= 0x0B64;
const GLuint GL_LINEAR				= 0x2601;
const GLuint GL_EXP				= 0x0800;
const GLuint GL_EXP2				= 0x0801;

// Logic Ops
const GLuint GL_LOGIC_OP			= 0x0BF1;
const GLuint GL_INDEX_LOGIC_OP			= 0x0BF1;
const GLuint GL_COLOR_LOGIC_OP			= 0x0BF2;
const GLuint GL_LOGIC_OP_MODE			= 0x0BF0;
const GLuint GL_CLEAR				= 0x1500;
const GLuint GL_SET				= 0x150F;
const GLuint GL_COPY				= 0x1503;
const GLuint GL_COPY_INVERTED			= 0x150C;
const GLuint GL_NOOP				= 0x1505;
const GLuint GL_INVERT				= 0x150A;
const GLuint GL_AND				= 0x1501;
const GLuint GL_NAND				= 0x150E;
const GLuint GL_OR				= 0x1507;
const GLuint GL_NOR				= 0x1508;
const GLuint GL_XOR				= 0x1506;
const GLuint GL_EQUIV				= 0x1509;
const GLuint GL_AND_REVERSE			= 0x1502;
const GLuint GL_AND_INVERTED			= 0x1504;
const GLuint GL_OR_REVERSE			= 0x150B;
const GLuint GL_OR_INVERTED			= 0x150D;

// Stencil
const GLuint GL_STENCIL_TEST			= 0x0B90;
const GLuint GL_STENCIL_WRITEMASK		= 0x0B98;
const GLuint GL_STENCIL_BITS			= 0x0D57;
const GLuint GL_STENCIL_FUNC			= 0x0B92;
const GLuint GL_STENCIL_VALUE_MASK		= 0x0B93;
const GLuint GL_STENCIL_REF			= 0x0B97;
const GLuint GL_STENCIL_FAIL			= 0x0B94;
const GLuint GL_STENCIL_PASS_DEPTH_PASS		= 0x0B96;
const GLuint GL_STENCIL_PASS_DEPTH_FAIL		= 0x0B95;
const GLuint GL_STENCIL_CLEAR_VALUE		= 0x0B91;
const GLuint GL_STENCIL_INDEX			= 0x1901;
const GLuint GL_KEEP				= 0x1E00;
const GLuint GL_REPLACE				= 0x1E01;
const GLuint GL_INCR				= 0x1E02;
const GLuint GL_DECR				= 0x1E03;

// Buffers, Pixel Drawing/Reading
const GLuint GL_NONE				= 0x0;
const GLuint GL_LEFT				= 0x0406; 
const GLuint GL_RIGHT				= 0x0407;
//const GLuint GL_FRONT				= 0x0404;
//const GLuint GL_BACK				= 0x0405;
//const GLuint GL_FRONT_AND_BACK		= 0x0408;
const GLuint GL_FRONT_LEFT			= 0x0400;
const GLuint GL_FRONT_RIGHT			= 0x0401;
const GLuint GL_BACK_LEFT			= 0x0402;
const GLuint GL_BACK_RIGHT			= 0x0403;
const GLuint GL_AUX0				= 0x0409;
const GLuint GL_AUX1				= 0x040A;
const GLuint GL_AUX2				= 0x040B;
const GLuint GL_AUX3				= 0x040C;
const GLuint GL_COLOR_INDEX			= 0x1900;
const GLuint GL_RED				= 0x1903;
const GLuint GL_GREEN				= 0x1904;
const GLuint GL_BLUE				= 0x1905;
const GLuint GL_ALPHA				= 0x1906;
const GLuint GL_LUMINANCE			= 0x1909;
const GLuint GL_LUMINANCE_ALPHA			= 0x190A;
const GLuint GL_ALPHA_BITS			= 0x0D55;
const GLuint GL_RED_BITS			= 0x0D52;
const GLuint GL_GREEN_BITS			= 0x0D53;
const GLuint GL_BLUE_BITS			= 0x0D54;
const GLuint GL_INDEX_BITS			= 0x0D51;
const GLuint GL_SUBPIXEL_BITS			= 0x0D50;
const GLuint GL_AUX_BUFFERS			= 0x0C00;
const GLuint GL_READ_BUFFER			= 0x0C02;
const GLuint GL_DRAW_BUFFER			= 0x0C01;
const GLuint GL_DOUBLEBUFFER			= 0x0C32;
const GLuint GL_STEREO				= 0x0C33;
const GLuint GL_BITMAP				= 0x1A00;
const GLuint GL_COLOR				= 0x1800;
const GLuint GL_DEPTH				= 0x1801;
const GLuint GL_STENCIL				= 0x1802;
const GLuint GL_DITHER				= 0x0BD0;
const GLuint GL_RGB				= 0x1907;
const GLuint GL_RGBA				= 0x1908;

// Implementation limits
const GLuint GL_MAX_LIST_NESTING		= 0x0B31;
const GLuint GL_MAX_ATTRIB_STACK_DEPTH		= 0x0D35;
const GLuint GL_MAX_MODELVIEW_STACK_DEPTH	= 0x0D36;
const GLuint GL_MAX_NAME_STACK_DEPTH		= 0x0D37;
const GLuint GL_MAX_PROJECTION_STACK_DEPTH	= 0x0D38;
const GLuint GL_MAX_TEXTURE_STACK_DEPTH		= 0x0D39;
const GLuint GL_MAX_EVAL_ORDER			= 0x0D30;
const GLuint GL_MAX_LIGHTS			= 0x0D31;
const GLuint GL_MAX_CLIP_PLANES			= 0x0D32;
const GLuint GL_MAX_TEXTURE_SIZE		= 0x0D33;
const GLuint GL_MAX_PIXEL_MAP_TABLE		= 0x0D34;
const GLuint GL_MAX_VIEWPORT_DIMS		= 0x0D3A;
const GLuint GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	= 0x0D3B;

// Gets
const GLuint GL_ATTRIB_STACK_DEPTH		= 0x0BB0;
const GLuint GL_CLIENT_ATTRIB_STACK_DEPTH	= 0x0BB1;
const GLuint GL_COLOR_CLEAR_VALUE		= 0x0C22;
const GLuint GL_COLOR_WRITEMASK			= 0x0C23;
const GLuint GL_CURRENT_INDEX			= 0x0B01;
const GLuint GL_CURRENT_COLOR			= 0x0B00;
const GLuint GL_CURRENT_NORMAL			= 0x0B02;
const GLuint GL_CURRENT_RASTER_COLOR		= 0x0B04;
const GLuint GL_CURRENT_RASTER_DISTANCE		= 0x0B09;
const GLuint GL_CURRENT_RASTER_INDEX		= 0x0B05;
const GLuint GL_CURRENT_RASTER_POSITION		= 0x0B07;
const GLuint GL_CURRENT_RASTER_TEXTURE_COORDS	= 0x0B06;
const GLuint GL_CURRENT_RASTER_POSITION_VALID	= 0x0B08;
const GLuint GL_CURRENT_TEXTURE_COORDS		= 0x0B03;
const GLuint GL_INDEX_CLEAR_VALUE		= 0x0C20;
const GLuint GL_INDEX_MODE			= 0x0C30;
const GLuint GL_INDEX_WRITEMASK			= 0x0C21;
const GLuint GL_MODELVIEW_MATRIX		= 0x0BA6;
const GLuint GL_MODELVIEW_STACK_DEPTH		= 0x0BA3;
const GLuint GL_NAME_STACK_DEPTH		= 0x0D70;
const GLuint GL_PROJECTION_MATRIX		= 0x0BA7;
const GLuint GL_PROJECTION_STACK_DEPTH		= 0x0BA4;
const GLuint GL_RENDER_MODE			= 0x0C40;
const GLuint GL_RGBA_MODE			= 0x0C31;
const GLuint GL_TEXTURE_MATRIX			= 0x0BA8;
const GLuint GL_TEXTURE_STACK_DEPTH		= 0x0BA5;
const GLuint GL_VIEWPORT			= 0x0BA2;

// Evaluators
const GLuint GL_AUTO_NORMAL			= 0x0D80;
const GLuint GL_MAP1_COLOR_4			= 0x0D90;
const GLuint GL_MAP1_GRID_DOMAIN		= 0x0DD0;
const GLuint GL_MAP1_GRID_SEGMENTS		= 0x0DD1;
const GLuint GL_MAP1_INDEX			= 0x0D91;
const GLuint GL_MAP1_NORMAL			= 0x0D92;
const GLuint GL_MAP1_TEXTURE_COORD_1		= 0x0D93;
const GLuint GL_MAP1_TEXTURE_COORD_2		= 0x0D94;
const GLuint GL_MAP1_TEXTURE_COORD_3		= 0x0D95;
const GLuint GL_MAP1_TEXTURE_COORD_4		= 0x0D96;
const GLuint GL_MAP1_VERTEX_3			= 0x0D97;
const GLuint GL_MAP1_VERTEX_4			= 0x0D98;
const GLuint GL_MAP2_COLOR_4			= 0x0DB0;
const GLuint GL_MAP2_GRID_DOMAIN		= 0x0DD2;
const GLuint GL_MAP2_GRID_SEGMENTS		= 0x0DD3;
const GLuint GL_MAP2_INDEX			= 0x0DB1;
const GLuint GL_MAP2_NORMAL			= 0x0DB2;
const GLuint GL_MAP2_TEXTURE_COORD_1		= 0x0DB3;
const GLuint GL_MAP2_TEXTURE_COORD_2		= 0x0DB4;
const GLuint GL_MAP2_TEXTURE_COORD_3		= 0x0DB5;
const GLuint GL_MAP2_TEXTURE_COORD_4		= 0x0DB6;
const GLuint GL_MAP2_VERTEX_3			= 0x0DB7;
const GLuint GL_MAP2_VERTEX_4			= 0x0DB8;
const GLuint GL_COEFF				= 0x0A00;
const GLuint GL_DOMAIN				= 0x0A02;
const GLuint GL_ORDER				= 0x0A01;

// Hints
const GLuint GL_FOG_HINT			= 0x0C54;
const GLuint GL_LINE_SMOOTH_HINT		= 0x0C52;
const GLuint GL_PERSPECTIVE_CORRECTION_HINT	= 0x0C50;
const GLuint GL_POINT_SMOOTH_HINT		= 0x0C51;
const GLuint GL_POLYGON_SMOOTH_HINT		= 0x0C53;
const GLuint GL_DONT_CARE			= 0x1100;
const GLuint GL_FASTEST				= 0x1101;
const GLuint GL_NICEST				= 0x1102;

// Scissor box
const GLuint GL_SCISSOR_TEST			= 0x0C11;
const GLuint GL_SCISSOR_BOX			= 0x0C10;

// Pixel Mode / Transfer
const GLuint GL_MAP_COLOR			= 0x0D10;
const GLuint GL_MAP_STENCIL			= 0x0D11;
const GLuint GL_INDEX_SHIFT			= 0x0D12;
const GLuint GL_INDEX_OFFSET			= 0x0D13;
const GLuint GL_RED_SCALE			= 0x0D14;
const GLuint GL_RED_BIAS			= 0x0D15;
const GLuint GL_GREEN_SCALE			= 0x0D18;
const GLuint GL_GREEN_BIAS			= 0x0D19;
const GLuint GL_BLUE_SCALE			= 0x0D1A;
const GLuint GL_BLUE_BIAS			= 0x0D1B;
const GLuint GL_ALPHA_SCALE			= 0x0D1C;
const GLuint GL_ALPHA_BIAS			= 0x0D1D;
const GLuint GL_DEPTH_SCALE			= 0x0D1E;
const GLuint GL_DEPTH_BIAS			= 0x0D1F;
const GLuint GL_PIXEL_MAP_S_TO_S_SIZE		= 0x0CB1;
const GLuint GL_PIXEL_MAP_I_TO_I_SIZE		= 0x0CB0;
const GLuint GL_PIXEL_MAP_I_TO_R_SIZE		= 0x0CB2;
const GLuint GL_PIXEL_MAP_I_TO_G_SIZE		= 0x0CB3;
const GLuint GL_PIXEL_MAP_I_TO_B_SIZE		= 0x0CB4;
const GLuint GL_PIXEL_MAP_I_TO_A_SIZE		= 0x0CB5;
const GLuint GL_PIXEL_MAP_R_TO_R_SIZE		= 0x0CB6;
const GLuint GL_PIXEL_MAP_G_TO_G_SIZE		= 0x0CB7;
const GLuint GL_PIXEL_MAP_B_TO_B_SIZE		= 0x0CB8;
const GLuint GL_PIXEL_MAP_A_TO_A_SIZE		= 0x0CB9;
const GLuint GL_PIXEL_MAP_S_TO_S		= 0x0C71;
const GLuint GL_PIXEL_MAP_I_TO_I		= 0x0C70;
const GLuint GL_PIXEL_MAP_I_TO_R		= 0x0C72;
const GLuint GL_PIXEL_MAP_I_TO_G		= 0x0C73;
const GLuint GL_PIXEL_MAP_I_TO_B		= 0x0C74;
const GLuint GL_PIXEL_MAP_I_TO_A		= 0x0C75;
const GLuint GL_PIXEL_MAP_R_TO_R		= 0x0C76;
const GLuint GL_PIXEL_MAP_G_TO_G		= 0x0C77;
const GLuint GL_PIXEL_MAP_B_TO_B		= 0x0C78;
const GLuint GL_PIXEL_MAP_A_TO_A		= 0x0C79;
const GLuint GL_PACK_ALIGNMENT			= 0x0D05;
const GLuint GL_PACK_LSB_FIRST			= 0x0D01;
const GLuint GL_PACK_ROW_LENGTH			= 0x0D02;
const GLuint GL_PACK_SKIP_PIXELS		= 0x0D04;
const GLuint GL_PACK_SKIP_ROWS			= 0x0D03;
const GLuint GL_PACK_SWAP_BYTES			= 0x0D00;
const GLuint GL_UNPACK_ALIGNMENT		= 0x0CF5;
const GLuint GL_UNPACK_LSB_FIRST		= 0x0CF1;
const GLuint GL_UNPACK_ROW_LENGTH		= 0x0CF2;
const GLuint GL_UNPACK_SKIP_PIXELS		= 0x0CF4;
const GLuint GL_UNPACK_SKIP_ROWS		= 0x0CF3;
const GLuint GL_UNPACK_SWAP_BYTES		= 0x0CF0;
const GLuint GL_ZOOM_X				= 0x0D16;
const GLuint GL_ZOOM_Y				= 0x0D17;

// Texture mapping
const GLuint GL_TEXTURE_ENV			= 0x2300;
const GLuint GL_TEXTURE_ENV_MODE		= 0x2200;
const GLuint GL_TEXTURE_1D			= 0x0DE0;
const GLuint GL_TEXTURE_2D			= 0x0DE1;
const GLuint GL_TEXTURE_WRAP_S			= 0x2802;
const GLuint GL_TEXTURE_WRAP_T			= 0x2803;
const GLuint GL_TEXTURE_MAG_FILTER		= 0x2800;
const GLuint GL_TEXTURE_MIN_FILTER		= 0x2801;
const GLuint GL_TEXTURE_ENV_COLOR		= 0x2201;
const GLuint GL_TEXTURE_GEN_S			= 0x0C60;
const GLuint GL_TEXTURE_GEN_T			= 0x0C61;
const GLuint GL_TEXTURE_GEN_MODE		= 0x2500;
const GLuint GL_TEXTURE_BORDER_COLOR		= 0x1004;
const GLuint GL_TEXTURE_WIDTH			= 0x1000;
const GLuint GL_TEXTURE_HEIGHT			= 0x1001;
const GLuint GL_TEXTURE_BORDER			= 0x1005;
const GLuint GL_TEXTURE_COMPONENTS		= 0x1003;
const GLuint GL_TEXTURE_RED_SIZE		= 0x805C;
const GLuint GL_TEXTURE_GREEN_SIZE		= 0x805D;
const GLuint GL_TEXTURE_BLUE_SIZE		= 0x805E;
const GLuint GL_TEXTURE_ALPHA_SIZE		= 0x805F;
const GLuint GL_TEXTURE_LUMINANCE_SIZE		= 0x8060;
const GLuint GL_TEXTURE_INTENSITY_SIZE		= 0x8061;
const GLuint GL_NEAREST_MIPMAP_NEAREST		= 0x2700;
const GLuint GL_NEAREST_MIPMAP_LINEAR		= 0x2702;
const GLuint GL_LINEAR_MIPMAP_NEAREST		= 0x2701;
const GLuint GL_LINEAR_MIPMAP_LINEAR		= 0x2703;
const GLuint GL_OBJECT_LINEAR			= 0x2401;
const GLuint GL_OBJECT_PLANE			= 0x2501;
const GLuint GL_EYE_LINEAR			= 0x2400;
const GLuint GL_EYE_PLANE			= 0x2502;
const GLuint GL_SPHERE_MAP			= 0x2402;
const GLuint GL_DECAL				= 0x2101;
const GLuint GL_MODULATE			= 0x2100;
const GLuint GL_NEAREST				= 0x2600;
const GLuint GL_REPEAT				= 0x2901;
const GLuint GL_CLAMP				= 0x2900;
const GLuint GL_S				= 0x2000;
const GLuint GL_T				= 0x2001;
const GLuint GL_R				= 0x2002;
const GLuint GL_Q				= 0x2003;
const GLuint GL_TEXTURE_GEN_R			= 0x0C62;
const GLuint GL_TEXTURE_GEN_Q			= 0x0C63;

// Utility
const GLuint GL_VENDOR				= 0x1F00;
const GLuint GL_RENDERER			= 0x1F01;
const GLuint GL_VERSION				= 0x1F02;
const GLuint GL_EXTENSIONS			= 0x1F03;

// Errors
const GLuint GL_NO_ERROR			= 0x0;
const GLuint GL_INVALID_VALUE			= 0x0501;
const GLuint GL_INVALID_ENUM			= 0x0500;
const GLuint GL_INVALID_OPERATION		= 0x0502;
const GLuint GL_STACK_OVERFLOW			= 0x0503;
const GLuint GL_STACK_UNDERFLOW			= 0x0504;
const GLuint GL_OUT_OF_MEMORY			= 0x0505;

// glPush/PopAttrib bits
const GLuint GL_CURRENT_BIT			= 0x00000001;
const GLuint GL_POINT_BIT			= 0x00000002;
const GLuint GL_LINE_BIT			= 0x00000004;
const GLuint GL_POLYGON_BIT			= 0x00000008;
const GLuint GL_POLYGON_STIPPLE_BIT		= 0x00000010;
const GLuint GL_PIXEL_MODE_BIT			= 0x00000020;
const GLuint GL_LIGHTING_BIT			= 0x00000040;
const GLuint GL_FOG_BIT				= 0x00000080;
const GLuint GL_DEPTH_BUFFER_BIT		= 0x00000100;
const GLuint GL_ACCUM_BUFFER_BIT		= 0x00000200;
const GLuint GL_STENCIL_BUFFER_BIT		= 0x00000400;
const GLuint GL_VIEWPORT_BIT			= 0x00000800;
const GLuint GL_TRANSFORM_BIT			= 0x00001000;
const GLuint GL_ENABLE_BIT			= 0x00002000;
const GLuint GL_COLOR_BUFFER_BIT		= 0x00004000;
const GLuint GL_HINT_BIT			= 0x00008000;
const GLuint GL_EVAL_BIT			= 0x00010000;
const GLuint GL_LIST_BIT			= 0x00020000;
const GLuint GL_TEXTURE_BIT			= 0x00040000;
const GLuint GL_SCISSOR_BIT			= 0x00080000;
const GLuint GL_ALL_ATTRIB_BITS			= 0x000FFFFF;

// OpenGL 1.1
const GLuint GL_PROXY_TEXTURE_1D		= 0x8063;
const GLuint GL_PROXY_TEXTURE_2D		= 0x8064;
const GLuint GL_TEXTURE_PRIORITY		= 0x8066;
const GLuint GL_TEXTURE_RESIDENT		= 0x8067;
const GLuint GL_TEXTURE_BINDING_1D		= 0x8068;
const GLuint GL_TEXTURE_BINDING_2D		= 0x8069;
const GLuint GL_TEXTURE_INTERNAL_FORMAT		= 0x1003;
const GLuint GL_ALPHA4				= 0x803B;
const GLuint GL_ALPHA8				= 0x803C;
const GLuint GL_ALPHA12				= 0x803D;
const GLuint GL_ALPHA16				= 0x803E;
const GLuint GL_LUMINANCE4			= 0x803F;
const GLuint GL_LUMINANCE8			= 0x8040;
const GLuint GL_LUMINANCE12			= 0x8041;
const GLuint GL_LUMINANCE16			= 0x8042;
const GLuint GL_LUMINANCE4_ALPHA4		= 0x8043;
const GLuint GL_LUMINANCE6_ALPHA2		= 0x8044;
const GLuint GL_LUMINANCE8_ALPHA8		= 0x8045;
const GLuint GL_LUMINANCE12_ALPHA4		= 0x8046;
const GLuint GL_LUMINANCE12_ALPHA12		= 0x8047;
const GLuint GL_LUMINANCE16_ALPHA16		= 0x8048;
const GLuint GL_INTENSITY			= 0x8049;
const GLuint GL_INTENSITY4			= 0x804A;
const GLuint GL_INTENSITY8			= 0x804B;
const GLuint GL_INTENSITY12			= 0x804C;
const GLuint GL_INTENSITY16			= 0x804D;
const GLuint GL_R3_G3_B2			= 0x2A10;
const GLuint GL_RGB4				= 0x804F;
const GLuint GL_RGB5				= 0x8050;
const GLuint GL_RGB8				= 0x8051;
const GLuint GL_RGB10				= 0x8052;
const GLuint GL_RGB12				= 0x8053;
const GLuint GL_RGB16				= 0x8054;
const GLuint GL_RGBA2				= 0x8055;
const GLuint GL_RGBA4				= 0x8056;
const GLuint GL_RGB5_A1				= 0x8057;
const GLuint GL_RGBA8				= 0x8058;
const GLuint GL_RGB10_A2			= 0x8059;
const GLuint GL_RGBA12				= 0x805A;
const GLuint GL_RGBA16				= 0x805B;
const GLuint GL_CLIENT_PIXEL_STORE_BIT		= 0x00000001;
const GLuint GL_CLIENT_VERTEX_ARRAY_BIT		= 0x00000002;
const GLuint GL_ALL_CLIENT_ATTRIB_BITS		= 0xFFFFFFFF;
const GLuint GL_CLIENT_ALL_ATTRIB_BITS		= 0xFFFFFFFF;

// OpenGL 1.2
const GLuint GL_RESCALE_NORMAL			= 0x803A;
const GLuint GL_CLAMP_TO_EDGE			= 0x812F;
const GLuint GL_MAX_ELEMENTS_VERTICES		= 0x80E8;
const GLuint GL_MAX_ELEMENTS_INDICES		= 0x80E9;
const GLuint GL_BGR				= 0x80E0;
const GLuint GL_BGRA				= 0x80E1;
const GLuint GL_UNSIGNED_BYTE_3_3_2		= 0x8032;
const GLuint GL_UNSIGNED_BYTE_2_3_3_REV		= 0x8362;
const GLuint GL_UNSIGNED_SHORT_5_6_5		= 0x8363;
const GLuint GL_UNSIGNED_SHORT_5_6_5_REV	= 0x8364;
const GLuint GL_UNSIGNED_SHORT_4_4_4_4		= 0x8033;
const GLuint GL_UNSIGNED_SHORT_4_4_4_4_REV	= 0x8365;
const GLuint GL_UNSIGNED_SHORT_5_5_5_1		= 0x8034;
const GLuint GL_UNSIGNED_SHORT_1_5_5_5_REV	= 0x8366;
const GLuint GL_UNSIGNED_INT_8_8_8_8		= 0x8035;
const GLuint GL_UNSIGNED_INT_8_8_8_8_REV	= 0x8367;
const GLuint GL_UNSIGNED_INT_10_10_10_2		= 0x8036;
const GLuint GL_UNSIGNED_INT_2_10_10_10_REV	= 0x8368;
const GLuint GL_LIGHT_MODEL_COLOR_CONTROL	= 0x81F8;
const GLuint GL_SINGLE_COLOR			= 0x81F9;
const GLuint GL_SEPARATE_SPECULAR_COLOR		= 0x81FA;
const GLuint GL_TEXTURE_MIN_LOD			= 0x813A;
const GLuint GL_TEXTURE_MAX_LOD			= 0x813B;
const GLuint GL_TEXTURE_BASE_LEVEL		= 0x813C;
const GLuint GL_TEXTURE_MAX_LEVEL		= 0x813D;
const GLuint GL_SMOOTH_POINT_SIZE_RANGE		= 0x0B12;
const GLuint GL_SMOOTH_POINT_SIZE_GRANULARITY	= 0x0B13;
const GLuint GL_SMOOTH_LINE_WIDTH_RANGE		= 0x0B22;
const GLuint GL_SMOOTH_LINE_WIDTH_GRANULARITY	= 0x0B23;
const GLuint GL_ALIASED_POINT_SIZE_RANGE	= 0x846D;
const GLuint GL_ALIASED_LINE_WIDTH_RANGE	= 0x846E;
const GLuint GL_PACK_SKIP_IMAGES		= 0x806B;
const GLuint GL_PACK_IMAGE_HEIGHT		= 0x806C;
const GLuint GL_UNPACK_SKIP_IMAGES		= 0x806D;
const GLuint GL_UNPACK_IMAGE_HEIGHT		= 0x806E;
const GLuint GL_TEXTURE_3D			= 0x806F;
const GLuint GL_PROXY_TEXTURE_3D		= 0x8070;
const GLuint GL_TEXTURE_DEPTH			= 0x8071;
const GLuint GL_TEXTURE_WRAP_R			= 0x8072;
const GLuint GL_MAX_3D_TEXTURE_SIZE		= 0x8073;
const GLuint GL_TEXTURE_BINDING_3D		= 0x806A;

// OpenGL 1.3
const GLuint GL_TEXTURE0			= 0x84C0;
const GLuint GL_TEXTURE1			= 0x84C1;
const GLuint GL_TEXTURE2			= 0x84C2;
const GLuint GL_TEXTURE3			= 0x84C3;
const GLuint GL_TEXTURE4			= 0x84C4;
const GLuint GL_TEXTURE5			= 0x84C5;
const GLuint GL_TEXTURE6			= 0x84C6;
const GLuint GL_TEXTURE7			= 0x84C7;
const GLuint GL_TEXTURE8			= 0x84C8;
const GLuint GL_TEXTURE9			= 0x84C9;
const GLuint GL_TEXTURE10			= 0x84CA;
const GLuint GL_TEXTURE11			= 0x84CB;
const GLuint GL_TEXTURE12			= 0x84CC;
const GLuint GL_TEXTURE13			= 0x84CD;
const GLuint GL_TEXTURE14			= 0x84CE;
const GLuint GL_TEXTURE15			= 0x84CF;
const GLuint GL_TEXTURE16			= 0x84D0;
const GLuint GL_TEXTURE17			= 0x84D1;
const GLuint GL_TEXTURE18			= 0x84D2;
const GLuint GL_TEXTURE19			= 0x84D3;
const GLuint GL_TEXTURE20			= 0x84D4;
const GLuint GL_TEXTURE21			= 0x84D5;
const GLuint GL_TEXTURE22			= 0x84D6;
const GLuint GL_TEXTURE23			= 0x84D7;
const GLuint GL_TEXTURE24			= 0x84D8;
const GLuint GL_TEXTURE25			= 0x84D9;
const GLuint GL_TEXTURE26			= 0x84DA;
const GLuint GL_TEXTURE27			= 0x84DB;
const GLuint GL_TEXTURE28			= 0x84DC;
const GLuint GL_TEXTURE29			= 0x84DD;
const GLuint GL_TEXTURE30			= 0x84DE;
const GLuint GL_TEXTURE31			= 0x84DF;
const GLuint GL_ACTIVE_TEXTURE			= 0x84E0;
const GLuint GL_CLIENT_ACTIVE_TEXTURE		= 0x84E1;
const GLuint GL_MAX_TEXTURE_UNITS		= 0x84E2;
const GLuint GL_NORMAL_MAP			= 0x8511;
const GLuint GL_REFLECTION_MAP			= 0x8512;
const GLuint GL_TEXTURE_CUBE_MAP		= 0x8513;
const GLuint GL_TEXTURE_BINDING_CUBE_MAP	= 0x8514;
const GLuint GL_TEXTURE_CUBE_MAP_POSITIVE_X	= 0x8515;
const GLuint GL_TEXTURE_CUBE_MAP_NEGATIVE_X	= 0x8516;
const GLuint GL_TEXTURE_CUBE_MAP_POSITIVE_Y	= 0x8517;
const GLuint GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	= 0x8518;
const GLuint GL_TEXTURE_CUBE_MAP_POSITIVE_Z	= 0x8519;
const GLuint GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	= 0x851A;
const GLuint GL_PROXY_TEXTURE_CUBE_MAP		= 0x851B;
const GLuint GL_MAX_CUBE_MAP_TEXTURE_SIZE	= 0x851C;
const GLuint GL_COMPRESSED_ALPHA		= 0x84E9;
const GLuint GL_COMPRESSED_LUMINANCE		= 0x84EA;
const GLuint GL_COMPRESSED_LUMINANCE_ALPHA	= 0x84EB;
const GLuint GL_COMPRESSED_INTENSITY		= 0x84EC;
const GLuint GL_COMPRESSED_RGB			= 0x84ED;
const GLuint GL_COMPRESSED_RGBA			= 0x84EE;
const GLuint GL_TEXTURE_COMPRESSION_HINT	= 0x84EF;
const GLuint GL_TEXTURE_COMPRESSED_IMAGE_SIZE	= 0x86A0;
const GLuint GL_TEXTURE_COMPRESSED		= 0x86A1;
const GLuint GL_NUM_COMPRESSED_TEXTURE_FORMATS	= 0x86A2;
const GLuint GL_COMPRESSED_TEXTURE_FORMATS	= 0x86A3;
const GLuint GL_MULTISAMPLE			= 0x809D;
const GLuint GL_SAMPLE_ALPHA_TO_COVERAGE	= 0x809E;
const GLuint GL_SAMPLE_ALPHA_TO_ONE		= 0x809F;
const GLuint GL_SAMPLE_COVERAGE			= 0x80A0;
const GLuint GL_SAMPLE_BUFFERS			= 0x80A8;
const GLuint GL_SAMPLES				= 0x80A9;
const GLuint GL_SAMPLE_COVERAGE_VALUE		= 0x80AA;
const GLuint GL_SAMPLE_COVERAGE_INVERT		= 0x80AB;
const GLuint GL_MULTISAMPLE_BIT			= 0x20000000;
const GLuint GL_TRANSPOSE_MODELVIEW_MATRIX	= 0x84E3;
const GLuint GL_TRANSPOSE_PROJECTION_MATRIX	= 0x84E4;
const GLuint GL_TRANSPOSE_TEXTURE_MATRIX	= 0x84E5;
const GLuint GL_TRANSPOSE_COLOR_MATRIX		= 0x84E6;
const GLuint GL_COMBINE				= 0x8570;
const GLuint GL_COMBINE_RGB			= 0x8571;
const GLuint GL_COMBINE_ALPHA			= 0x8572;
const GLuint GL_SOURCE0_RGB			= 0x8580;
const GLuint GL_SOURCE1_RGB			= 0x8581;
const GLuint GL_SOURCE2_RGB			= 0x8582;
const GLuint GL_SOURCE0_ALPHA			= 0x8588;
const GLuint GL_SOURCE1_ALPHA			= 0x8589;
const GLuint GL_SOURCE2_ALPHA			= 0x858A;
const GLuint GL_OPERAND0_RGB			= 0x8590;
const GLuint GL_OPERAND1_RGB			= 0x8591;
const GLuint GL_OPERAND2_RGB			= 0x8592;
const GLuint GL_OPERAND0_ALPHA			= 0x8598;
const GLuint GL_OPERAND1_ALPHA			= 0x8599;
const GLuint GL_OPERAND2_ALPHA			= 0x859A;
const GLuint GL_RGB_SCALE			= 0x8573;
const GLuint GL_ADD_SIGNED			= 0x8574;
const GLuint GL_INTERPOLATE			= 0x8575;
const GLuint GL_SUBTRACT			= 0x84E7;
const GLuint GL_CONSTANT			= 0x8576;
const GLuint GL_PRIMARY_COLOR			= 0x8577;
const GLuint GL_PREVIOUS			= 0x8578;
const GLuint GL_DOT3_RGB			= 0x86AE;
const GLuint GL_DOT3_RGBA			= 0x86AF;
const GLuint GL_CLAMP_TO_BORDER			= 0x812D;

// OpenGL 1.4
const GLuint GL_BLEND_DST_RGB			= 0x80C8;
const GLuint GL_BLEND_SRC_RGB			= 0x80C9;
const GLuint GL_BLEND_DST_ALPHA			= 0x80CA;
const GLuint GL_BLEND_SRC_ALPHA			= 0x80CB;
const GLuint GL_POINT_SIZE_MIN			= 0x8126;
const GLuint GL_POINT_SIZE_MAX			= 0x8127;
const GLuint GL_POINT_FADE_THRESHOLD_SIZE	= 0x8128;
const GLuint GL_POINT_DISTANCE_ATTENUATION	= 0x8129;
const GLuint GL_GENERATE_MIPMAP			= 0x8191;
const GLuint GL_GENERATE_MIPMAP_HINT		= 0x8192;
const GLuint GL_DEPTH_COMPONENT16		= 0x81A5;
const GLuint GL_DEPTH_COMPONENT24		= 0x81A6;
const GLuint GL_DEPTH_COMPONENT32		= 0x81A7;
const GLuint GL_MIRRORED_REPEAT			= 0x8370;
const GLuint GL_FOG_COORDINATE_SOURCE		= 0x8450;
const GLuint GL_FOG_COORDINATE			= 0x8451;
const GLuint GL_FRAGMENT_DEPTH			= 0x8452;
const GLuint GL_CURRENT_FOG_COORDINATE		= 0x8453;
const GLuint GL_FOG_COORDINATE_ARRAY_TYPE	= 0x8454;
const GLuint GL_FOG_COORDINATE_ARRAY_STRIDE	= 0x8455;
const GLuint GL_FOG_COORDINATE_ARRAY_POINTER	= 0x8456;
const GLuint GL_FOG_COORDINATE_ARRAY		= 0x8457;
const GLuint GL_COLOR_SUM			= 0x8458;
const GLuint GL_CURRENT_SECONDARY_COLOR		= 0x8459;
const GLuint GL_SECONDARY_COLOR_ARRAY_SIZE	= 0x845A;
const GLuint GL_SECONDARY_COLOR_ARRAY_TYPE	= 0x845B;
const GLuint GL_SECONDARY_COLOR_ARRAY_STRIDE	= 0x845C;
const GLuint GL_SECONDARY_COLOR_ARRAY_POINTER	= 0x845D;
const GLuint GL_SECONDARY_COLOR_ARRAY		= 0x845E;
const GLuint GL_MAX_TEXTURE_LOD_BIAS		= 0x84FD;
const GLuint GL_TEXTURE_FILTER_CONTROL		= 0x8500;
const GLuint GL_TEXTURE_LOD_BIAS		= 0x8501;
const GLuint GL_INCR_WRAP			= 0x8507;
const GLuint GL_DECR_WRAP			= 0x8508;
const GLuint GL_TEXTURE_DEPTH_SIZE		= 0x884A;
const GLuint GL_DEPTH_TEXTURE_MODE		= 0x884B;
const GLuint GL_TEXTURE_COMPARE_MODE		= 0x884C;
const GLuint GL_TEXTURE_COMPARE_FUNC		= 0x884D;
const GLuint GL_COMPARE_R_TO_TEXTURE		= 0x884E;

// OpenGL 1.5
const GLuint GL_BUFFER_SIZE			= 0x8764;
const GLuint GL_BUFFER_USAGE			= 0x8765;
const GLuint GL_QUERY_COUNTER_BITS		= 0x8864;
const GLuint GL_CURRENT_QUERY			= 0x8865;
const GLuint GL_QUERY_RESULT			= 0x8866;
const GLuint GL_QUERY_RESULT_AVAILABLE		= 0x8867;
const GLuint GL_ARRAY_BUFFER			= 0x8892;
const GLuint GL_ELEMENT_ARRAY_BUFFER		= 0x8893;
const GLuint GL_ARRAY_BUFFER_BINDING		= 0x8894;
const GLuint GL_ELEMENT_ARRAY_BUFFER_BINDING	= 0x8895;
const GLuint GL_VERTEX_ARRAY_BUFFER_BINDING	= 0x8896;
const GLuint GL_NORMAL_ARRAY_BUFFER_BINDING	= 0x8897;
const GLuint GL_COLOR_ARRAY_BUFFER_BINDING	= 0x8898;
const GLuint GL_INDEX_ARRAY_BUFFER_BINDING	= 0x8899;
const GLuint GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING= 0x889A;
const GLuint GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	= 0x889B;
const GLuint GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING= 0x889C;
const GLuint GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING= 0x889D;
const GLuint GL_WEIGHT_ARRAY_BUFFER_BINDING	= 0x889E;
const GLuint GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING= 0x889F;
const GLuint GL_READ_ONLY			= 0x88B8;
const GLuint GL_WRITE_ONLY			= 0x88B9;
const GLuint GL_READ_WRITE			= 0x88BA;
const GLuint GL_BUFFER_ACCESS			= 0x88BB;
const GLuint GL_BUFFER_MAPPED			= 0x88BC;
const GLuint GL_BUFFER_MAP_POINTER		= 0x88BD;
const GLuint GL_STREAM_DRAW			= 0x88E0;
const GLuint GL_STREAM_READ			= 0x88E1;
const GLuint GL_STREAM_COPY			= 0x88E2;
const GLuint GL_STATIC_DRAW			= 0x88E4;
const GLuint GL_STATIC_READ			= 0x88E5;
const GLuint GL_STATIC_COPY			= 0x88E6;
const GLuint GL_DYNAMIC_DRAW			= 0x88E8;
const GLuint GL_DYNAMIC_READ			= 0x88E9;
const GLuint GL_DYNAMIC_COPY			= 0x88EA;
const GLuint GL_SAMPLES_PASSED			= 0x8914;
const GLuint GL_FOG_COORD_SRC			= GL_FOG_COORDINATE_SOURCE;
const GLuint GL_FOG_COORD			= GL_FOG_COORDINATE;
const GLuint GL_CURRENT_FOG_COORD		= GL_CURRENT_FOG_COORDINATE;
const GLuint GL_FOG_COORD_ARRAY_TYPE		= GL_FOG_COORDINATE_ARRAY_TYPE;
const GLuint GL_FOG_COORD_ARRAY_STRIDE		= GL_FOG_COORDINATE_ARRAY_STRIDE;
const GLuint GL_FOG_COORD_ARRAY_POINTER		= GL_FOG_COORDINATE_ARRAY_POINTER;
const GLuint GL_FOG_COORD_ARRAY			= GL_FOG_COORDINATE_ARRAY;
const GLuint GL_FOG_COORD_ARRAY_BUFFER_BINDING	= GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING;
const GLuint GL_SRC0_RGB			= GL_SOURCE0_RGB;
const GLuint GL_SRC1_RGB			= GL_SOURCE1_RGB;
const GLuint GL_SRC2_RGB			= GL_SOURCE2_RGB;
const GLuint GL_SRC0_ALPHA			= GL_SOURCE0_ALPHA;
const GLuint GL_SRC1_ALPHA			= GL_SOURCE1_ALPHA;
const GLuint GL_SRC2_ALPHA			= GL_SOURCE2_ALPHA;

// OpenGL 2.0
const GLuint GL_BLEND_EQUATION_RGB		= 0x8009;
const GLuint GL_VERTEX_ATTRIB_ARRAY_ENABLED	= 0x8622;
const GLuint GL_VERTEX_ATTRIB_ARRAY_SIZE	= 0x8623;
const GLuint GL_VERTEX_ATTRIB_ARRAY_STRIDE	= 0x8624;
const GLuint GL_VERTEX_ATTRIB_ARRAY_TYPE	= 0x8625;
const GLuint GL_CURRENT_VERTEX_ATTRIB		= 0x8626;
const GLuint GL_VERTEX_PROGRAM_POINT_SIZE	= 0x8642;
const GLuint GL_VERTEX_PROGRAM_TWO_SIDE		= 0x8643;
const GLuint GL_VERTEX_ATTRIB_ARRAY_POINTER	= 0x8645;
const GLuint GL_STENCIL_BACK_FUNC		= 0x8800;
const GLuint GL_STENCIL_BACK_FAIL		= 0x8801;
const GLuint GL_STENCIL_BACK_PASS_DEPTH_FAIL	= 0x8802;
const GLuint GL_STENCIL_BACK_PASS_DEPTH_PASS	= 0x8803;
const GLuint GL_MAX_DRAW_BUFFERS		= 0x8824;
const GLuint GL_DRAW_BUFFER0			= 0x8825;
const GLuint GL_DRAW_BUFFER1			= 0x8826;
const GLuint GL_DRAW_BUFFER2			= 0x8827;
const GLuint GL_DRAW_BUFFER3			= 0x8828;
const GLuint GL_DRAW_BUFFER4			= 0x8829;
const GLuint GL_DRAW_BUFFER5			= 0x882A;
const GLuint GL_DRAW_BUFFER6			= 0x882B;
const GLuint GL_DRAW_BUFFER7			= 0x882C;
const GLuint GL_DRAW_BUFFER8			= 0x882D;
const GLuint GL_DRAW_BUFFER9			= 0x882E;
const GLuint GL_DRAW_BUFFER10			= 0x882F;
const GLuint GL_DRAW_BUFFER11			= 0x8830;
const GLuint GL_DRAW_BUFFER12			= 0x8831;
const GLuint GL_DRAW_BUFFER13			= 0x8832;
const GLuint GL_DRAW_BUFFER14			= 0x8833;
const GLuint GL_DRAW_BUFFER15			= 0x8834;
const GLuint GL_BLEND_EQUATION_ALPHA		= 0x883D;
const GLuint GL_POINT_SPRITE			= 0x8861;
const GLuint GL_COORD_REPLACE			= 0x8862;
const GLuint GL_MAX_VERTEX_ATTRIBS		= 0x8869;
const GLuint GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	= 0x886A;
const GLuint GL_MAX_TEXTURE_COORDS		= 0x8871;
const GLuint GL_MAX_TEXTURE_IMAGE_UNITS		= 0x8872;
const GLuint GL_FRAGMENT_SHADER			= 0x8B30;
const GLuint GL_VERTEX_SHADER			= 0x8B31;
const GLuint GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	= 0x8B49;
const GLuint GL_MAX_VERTEX_UNIFORM_COMPONENTS	= 0x8B4A;
const GLuint GL_MAX_VARYING_FLOATS		= 0x8B4B;
const GLuint GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	= 0x8B4C;
const GLuint GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS= 0x8B4D;
const GLuint GL_SHADER_TYPE			= 0x8B4F;
const GLuint GL_FLOAT_VEC2			= 0x8B50;
const GLuint GL_FLOAT_VEC3			= 0x8B51;
const GLuint GL_FLOAT_VEC4			= 0x8B52;
const GLuint GL_INT_VEC2			= 0x8B53;
const GLuint GL_INT_VEC3			= 0x8B54;
const GLuint GL_INT_VEC4			= 0x8B55;
const GLuint GL_BOOL				= 0x8B56;
const GLuint GL_BOOL_VEC2			= 0x8B57;
const GLuint GL_BOOL_VEC3			= 0x8B58;
const GLuint GL_BOOL_VEC4			= 0x8B59;
const GLuint GL_FLOAT_MAT2			= 0x8B5A;
const GLuint GL_FLOAT_MAT3			= 0x8B5B;
const GLuint GL_FLOAT_MAT4			= 0x8B5C;
const GLuint GL_SAMPLER_1D			= 0x8B5D;
const GLuint GL_SAMPLER_2D			= 0x8B5E;
const GLuint GL_SAMPLER_3D			= 0x8B5F;
const GLuint GL_SAMPLER_CUBE			= 0x8B60;
const GLuint GL_SAMPLER_1D_SHADOW		= 0x8B61;
const GLuint GL_SAMPLER_2D_SHADOW		= 0x8B62;
const GLuint GL_DELETE_STATUS			= 0x8B80;
const GLuint GL_COMPILE_STATUS			= 0x8B81;
const GLuint GL_LINK_STATUS			= 0x8B82;
const GLuint GL_VALIDATE_STATUS			= 0x8B83;
const GLuint GL_INFO_LOG_LENGTH			= 0x8B84;
const GLuint GL_ATTACHED_SHADERS		= 0x8B85;
const GLuint GL_ACTIVE_UNIFORMS			= 0x8B86;
const GLuint GL_ACTIVE_UNIFORM_MAX_LENGTH	= 0x8B87;
const GLuint GL_SHADER_SOURCE_LENGTH		= 0x8B88;
const GLuint GL_ACTIVE_ATTRIBUTES		= 0x8B89;
const GLuint GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	= 0x8B8A;
const GLuint GL_FRAGMENT_SHADER_DERIVATIVE_HINT	= 0x8B8B;
const GLuint GL_SHADING_LANGUAGE_VERSION	= 0x8B8C;
const GLuint GL_CURRENT_PROGRAM			= 0x8B8D;
const GLuint GL_POINT_SPRITE_COORD_ORIGIN	= 0x8CA0;
const GLuint GL_LOWER_LEFT			= 0x8CA1;
const GLuint GL_UPPER_LEFT			= 0x8CA2;
const GLuint GL_STENCIL_BACK_REF		= 0x8CA3;
const GLuint GL_STENCIL_BACK_VALUE_MASK		= 0x8CA4;
const GLuint GL_STENCIL_BACK_WRITEMASK		= 0x8CA5;

// ARB_Imaging
const GLuint GL_CONSTANT_COLOR			= 0x8001;
const GLuint GL_ONE_MINUS_CONSTANT_COLOR	= 0x8002;
const GLuint GL_CONSTANT_ALPHA			= 0x8003;
const GLuint GL_ONE_MINUS_CONSTANT_ALPHA	= 0x8004;
const GLuint GL_BLEND_COLOR			= 0x8005;
const GLuint GL_FUNC_ADD			= 0x8006;
const GLuint GL_MIN				= 0x8007;
const GLuint GL_MAX				= 0x8008;
const GLuint GL_BLEND_EQUATION			= 0x8009;
const GLuint GL_FUNC_SUBTRACT			= 0x800A;
const GLuint GL_FUNC_REVERSE_SUBTRACT		= 0x800B;
const GLuint GL_CONVOLUTION_1D			= 0x8010;
const GLuint GL_CONVOLUTION_2D			= 0x8011;
const GLuint GL_SEPARABLE_2D			= 0x8012;
const GLuint GL_CONVOLUTION_BORDER_MODE		= 0x8013;
const GLuint GL_CONVOLUTION_FILTER_SCALE	= 0x8014;
const GLuint GL_CONVOLUTION_FILTER_BIAS		= 0x8015;
const GLuint GL_REDUCE				= 0x8016;
const GLuint GL_CONVOLUTION_FORMAT		= 0x8017;
const GLuint GL_CONVOLUTION_WIDTH		= 0x8018;
const GLuint GL_CONVOLUTION_HEIGHT		= 0x8019;
const GLuint GL_MAX_CONVOLUTION_WIDTH		= 0x801A;
const GLuint GL_MAX_CONVOLUTION_HEIGHT		= 0x801B;
const GLuint GL_POST_CONVOLUTION_RED_SCALE	= 0x801C;
const GLuint GL_POST_CONVOLUTION_GREEN_SCALE	= 0x801D;
const GLuint GL_POST_CONVOLUTION_BLUE_SCALE	= 0x801E;
const GLuint GL_POST_CONVOLUTION_ALPHA_SCALE	= 0x801F;
const GLuint GL_POST_CONVOLUTION_RED_BIAS	= 0x8020;
const GLuint GL_POST_CONVOLUTION_GREEN_BIAS	= 0x8021;
const GLuint GL_POST_CONVOLUTION_BLUE_BIAS	= 0x8022;
const GLuint GL_POST_CONVOLUTION_ALPHA_BIAS	= 0x8023;
const GLuint GL_HISTOGRAM			= 0x8024;
const GLuint GL_PROXY_HISTOGRAM			= 0x8025;
const GLuint GL_HISTOGRAM_WIDTH			= 0x8026;
const GLuint GL_HISTOGRAM_FORMAT		= 0x8027;
const GLuint GL_HISTOGRAM_RED_SIZE		= 0x8028;
const GLuint GL_HISTOGRAM_GREEN_SIZE		= 0x8029;
const GLuint GL_HISTOGRAM_BLUE_SIZE		= 0x802A;
const GLuint GL_HISTOGRAM_ALPHA_SIZE		= 0x802B;
const GLuint GL_HISTOGRAM_LUMINANCE_SIZE	= 0x802C;
const GLuint GL_HISTOGRAM_SINK			= 0x802D;
const GLuint GL_MINMAX				= 0x802E;
const GLuint GL_MINMAX_FORMAT			= 0x802F;
const GLuint GL_MINMAX_SINK			= 0x8030;
const GLuint GL_TABLE_TOO_LARGE			= 0x8031;
const GLuint GL_COLOR_MATRIX			= 0x80B1;
const GLuint GL_COLOR_MATRIX_STACK_DEPTH	= 0x80B2;
const GLuint GL_MAX_COLOR_MATRIX_STACK_DEPTH	= 0x80B3;
const GLuint GL_POST_COLOR_MATRIX_RED_SCALE	= 0x80B4;
const GLuint GL_POST_COLOR_MATRIX_GREEN_SCALE	= 0x80B5;
const GLuint GL_POST_COLOR_MATRIX_BLUE_SCALE	= 0x80B6;
const GLuint GL_POST_COLOR_MATRIX_ALPHA_SCALE	= 0x80B7;
const GLuint GL_POST_COLOR_MATRIX_RED_BIAS	= 0x80B8;
const GLuint GL_POST_COLOR_MATRIX_GREEN_BIAS	= 0x80B9;
const GLuint GL_POST_COLOR_MATRIX_BLUE_BIAS	= 0x80BA;
const GLuint GL_POST_COLOR_MATRIX_ALPHA_BIAS	= 0x80BB;
const GLuint GL_COLOR_TABLE			= 0x80D0;
const GLuint GL_POST_CONVOLUTION_COLOR_TABLE	= 0x80D1;
const GLuint GL_POST_COLOR_MATRIX_COLOR_TABLE	= 0x80D2;
const GLuint GL_PROXY_COLOR_TABLE		= 0x80D3;
const GLuint GL_PROXY_POST_CONVOLUTION_COLOR_TABLE= 0x80D4;
const GLuint GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE= 0x80D5;
const GLuint GL_COLOR_TABLE_SCALE		= 0x80D6;
const GLuint GL_COLOR_TABLE_BIAS		= 0x80D7;
const GLuint GL_COLOR_TABLE_FORMAT		= 0x80D8;
const GLuint GL_COLOR_TABLE_WIDTH		= 0x80D9;
const GLuint GL_COLOR_TABLE_RED_SIZE		= 0x80DA;
const GLuint GL_COLOR_TABLE_GREEN_SIZE		= 0x80DB;
const GLuint GL_COLOR_TABLE_BLUE_SIZE		= 0x80DC;
const GLuint GL_COLOR_TABLE_ALPHA_SIZE		= 0x80DD;
const GLuint GL_COLOR_TABLE_LUMINANCE_SIZE	= 0x80DE;
const GLuint GL_COLOR_TABLE_INTENSITY_SIZE	= 0x80DF;
const GLuint GL_CONSTANT_BORDER			= 0x8151;
const GLuint GL_REPLICATE_BORDER		= 0x8153;
const GLuint GL_CONVOLUTION_BORDER_COLOR	= 0x8154;

/*
 * Types
 */
alias uint	GLenum;
alias ubyte	GLboolean;
alias uint	GLbitfield;
alias void	GLvoid;
alias byte	GLbyte;
alias short	GLshort;
alias int	GLint;
alias ubyte	GLubyte;
alias ushort	GLushort;
alias uint	GLuint;
alias int	GLsizei;
alias float	GLfloat;
alias float	GLclampf;
alias double	GLdouble;
alias double	GLclampd;
alias char	GLchar;
alias ptrdiff_t	GLintptr;
alias ptrdiff_t	GLsizeiptr;



extern (System)
{
    GLvoid glClearIndex(GLfloat);
    GLvoid glClearColor(GLclampf, GLclampf, GLclampf, GLclampf);
    GLvoid glClear(GLbitfield);
    GLvoid glIndexMask(GLuint);
    GLvoid glColorMask(GLboolean, GLboolean, GLboolean, GLboolean);
    GLvoid glAlphaFunc(GLenum, GLclampf);
    GLvoid glBlendFunc(GLenum, GLenum);
    GLvoid glLogicOp(GLenum);
    GLvoid glCullFace(GLenum);
    GLvoid glFrontFace(GLenum);
    GLvoid glPointSize(GLfloat);
    GLvoid glLineWidth(GLfloat);
    GLvoid glLineStipple(GLint, GLushort);
    GLvoid glPolygonMode(GLenum, GLenum);
    GLvoid glPolygonOffset(GLfloat, GLfloat);
    GLvoid glPolygonStipple(GLubyte*);
    GLvoid glGetPolygonStipple(GLubyte*);
    GLvoid glEdgeFlag(GLboolean);
    GLvoid glEdgeFlagv(GLboolean*);
    GLvoid glScissor(GLint, GLint, GLsizei, GLsizei);
    GLvoid glClipPlane(GLenum, GLdouble*);
    GLvoid glGetClipPlane(GLenum, GLdouble*);
    GLvoid glDrawBuffer(GLenum);
    GLvoid glReadBuffer(GLenum);
    GLvoid glEnable(GLenum);
    GLvoid glDisable(GLenum);
    GLboolean glIsEnabled(GLenum);
    GLvoid glEnableClientState(GLenum);
    GLvoid glDisableClientState(GLenum);
    GLvoid glGetBooleanv(GLenum, GLboolean*);
    GLvoid glGetDoublev(GLenum, GLdouble*);
    GLvoid glGetFloatv(GLenum, GLfloat*);
    GLvoid glGetIntegerv(GLenum, GLint*);
    GLvoid glPushAttrib(GLbitfield);
    GLvoid glPopAttrib();
    GLvoid glPushClientAttrib(GLbitfield);
    GLvoid glPopClientAttrib();
    GLint glRenderMode(GLenum);
    GLenum glGetError();
    GLubyte* glGetString(GLenum);
    GLvoid glFinish();
    GLvoid glFlush();
    GLvoid glHint(GLenum, GLenum);
    GLvoid glClearDepth(GLclampd);
    GLvoid glDepthFunc(GLenum);
    GLvoid glDepthMask(GLboolean);
    GLvoid glDepthRange(GLclampd, GLclampd);
    GLvoid glClearAccum(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glAccum(GLenum, GLfloat);
    GLvoid glMatrixMode(GLenum);
    GLvoid glOrtho(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glFrustum(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glViewport(GLint, GLint, GLsizei, GLsizei);
    GLvoid glPushMatrix();
    GLvoid glPopMatrix();
    GLvoid glLoadIdentity();
    GLvoid glLoadMatrixd(GLdouble*);
    GLvoid glLoadMatrixf(GLfloat*);
    GLvoid glMultMatrixd(GLdouble*);
    GLvoid glMultMatrixf(GLfloat*);
    GLvoid glRotated(GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glRotatef(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glScaled(GLdouble, GLdouble, GLdouble);
    GLvoid glScalef(GLfloat, GLfloat, GLfloat);
    GLvoid glTranslated(GLdouble, GLdouble, GLdouble);
    GLvoid glTranslatef(GLfloat, GLfloat, GLfloat);
    GLboolean glIsList(GLuint);
    GLvoid glDeleteLists(GLuint, GLsizei);
    GLuint glGenLists(GLsizei);
    GLvoid glNewList(GLuint, GLenum);
    GLvoid glEndList();
    GLvoid glCallList(GLuint);
    GLvoid glCallLists(GLsizei, GLenum, GLvoid*);
    GLvoid glListBase(GLuint);
    GLvoid glBegin(GLenum);
    GLvoid glEnd();
    GLvoid glVertex2d(GLdouble, GLdouble);
    GLvoid glVertex2f(GLfloat, GLfloat);
    GLvoid glVertex2i(GLint, GLint);
    GLvoid glVertex2s(GLshort, GLshort);
    GLvoid glVertex3d(GLdouble, GLdouble, GLdouble);
    GLvoid glVertex3f(GLfloat, GLfloat, GLfloat);
    GLvoid glVertex3i(GLint, GLint, GLint);
    GLvoid glVertex3s(GLshort, GLshort, GLshort);
    GLvoid glVertex4d(GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glVertex4f(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glVertex4i(GLint, GLint, GLint, GLint);
    GLvoid glVertex4s(GLshort, GLshort, GLshort, GLshort);
    GLvoid glVertex2dv(GLdouble*);
    GLvoid glVertex2fv(GLfloat*);
    GLvoid glVertex2iv(GLint*);
    GLvoid glVertex2sv(GLshort*);
    GLvoid glVertex3dv(GLdouble*);
    GLvoid glVertex3fv(GLfloat*);
    GLvoid glVertex3iv(GLint*);
    GLvoid glVertex3sv(GLshort*);
    GLvoid glVertex4dv(GLdouble*);
    GLvoid glVertex4fv(GLfloat*);
    GLvoid glVertex4iv(GLint*);
    GLvoid glVertex4sv(GLshort*);
    GLvoid glNormal3b(GLbyte, GLbyte, GLbyte);
    GLvoid glNormal3d(GLdouble, GLdouble, GLdouble);
    GLvoid glNormal3f(GLfloat, GLfloat, GLfloat);
    GLvoid glNormal3i(GLint, GLint, GLint);
    GLvoid glNormal3s(GLshort, GLshort, GLshort);
    GLvoid glNormal3bv(GLbyte*);
    GLvoid glNormal3dv(GLdouble*);
    GLvoid glNormal3fv(GLfloat*);
    GLvoid glNormal3iv(GLint*);
    GLvoid glNormal3sv(GLshort*);
    GLvoid glIndexd(GLdouble);
    GLvoid glIndexf(GLfloat);
    GLvoid glIndexi(GLint);
    GLvoid glIndexs(GLshort);
    GLvoid glIndexub(GLubyte);
    GLvoid glIndexdv(GLdouble*);
    GLvoid glIndexfv(GLfloat*);
    GLvoid glIndexiv(GLint*);
    GLvoid glIndexsv(GLshort*);
    GLvoid glIndexubv(GLubyte*);
    GLvoid glColor3b(GLbyte, GLbyte, GLbyte);
    GLvoid glColor3d(GLdouble, GLdouble, GLdouble);
    GLvoid glColor3f(GLfloat, GLfloat, GLfloat);
    GLvoid glColor3i(GLint, GLint, GLint);
    GLvoid glColor3s(GLshort, GLshort, GLshort);
    GLvoid glColor3ub(GLubyte, GLubyte, GLubyte);
    GLvoid glColor3ui(GLuint, GLuint, GLuint);
    GLvoid glColor3us(GLushort, GLushort, GLushort);
    GLvoid glColor4b(GLbyte, GLbyte, GLbyte, GLbyte);
    GLvoid glColor4d(GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glColor4f(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glColor4i(GLint, GLint, GLint, GLint);
    GLvoid glColor4s(GLshort, GLshort, GLshort, GLshort);
    GLvoid glColor4ub(GLubyte, GLubyte, GLubyte, GLubyte);
    GLvoid glColor4ui(GLuint, GLuint, GLuint, GLuint);
    GLvoid glColor4us(GLushort, GLushort, GLushort, GLushort);
    GLvoid glColor3bv(GLbyte*);
    GLvoid glColor3dv(GLdouble*);
    GLvoid glColor3fv(GLfloat*);
    GLvoid glColor3iv(GLint*);
    GLvoid glColor3sv(GLshort*);
    GLvoid glColor3ubv(GLubyte*);
    GLvoid glColor3uiv(GLuint*);
    GLvoid glColor3usv(GLushort*);
    GLvoid glColor4bv(GLbyte*);
    GLvoid glColor4dv(GLdouble*);
    GLvoid glColor4fv(GLfloat*);
    GLvoid glColor4iv(GLint*);
    GLvoid glColor4sv(GLshort*);
    GLvoid glColor4ubv(GLubyte*);
    GLvoid glColor4uiv(GLuint*);
    GLvoid glColor4usv(GLushort*);
    GLvoid glTexCoord1d(GLdouble);
    GLvoid glTexCoord1f(GLfloat);
    GLvoid glTexCoord1i(GLint);
    GLvoid glTexCoord1s(GLshort);
    GLvoid glTexCoord2d(GLdouble, GLdouble);
    GLvoid glTexCoord2f(GLfloat, GLfloat);
    GLvoid glTexCoord2i(GLint, GLint);
    GLvoid glTexCoord2s(GLshort, GLshort);
    GLvoid glTexCoord3d(GLdouble, GLdouble, GLdouble);
    GLvoid glTexCoord3f(GLfloat, GLfloat, GLfloat);
    GLvoid glTexCoord3i(GLint, GLint, GLint);
    GLvoid glTexCoord3s(GLshort, GLshort, GLshort);
    GLvoid glTexCoord4d(GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glTexCoord4f(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glTexCoord4i(GLint, GLint, GLint, GLint);
    GLvoid glTexCoord4s(GLshort, GLshort, GLshort, GLshort);
    GLvoid glTexCoord1dv(GLdouble*);
    GLvoid glTexCoord1fv(GLfloat*);
    GLvoid glTexCoord1iv(GLint*);
    GLvoid glTexCoord1sv(GLshort*);
    GLvoid glTexCoord2dv(GLdouble*);
    GLvoid glTexCoord2fv(GLfloat*);
    GLvoid glTexCoord2iv(GLint*);
    GLvoid glTexCoord2sv(GLshort*);
    GLvoid glTexCoord3dv(GLdouble*);
    GLvoid glTexCoord3fv(GLfloat*);
    GLvoid glTexCoord3iv(GLint*);
    GLvoid glTexCoord3sv(GLshort*);
    GLvoid glTexCoord4dv(GLdouble*);
    GLvoid glTexCoord4fv(GLfloat*);
    GLvoid glTexCoord4iv(GLint*);
    GLvoid glTexCoord4sv(GLshort*);
    GLvoid glRasterPos2d(GLdouble, GLdouble);
    GLvoid glRasterPos2f(GLfloat, GLfloat);
    GLvoid glRasterPos2i(GLint, GLint);
    GLvoid glRasterPos2s(GLshort, GLshort);
    GLvoid glRasterPos3d(GLdouble, GLdouble, GLdouble);
    GLvoid glRasterPos3f(GLfloat, GLfloat, GLfloat);
    GLvoid glRasterPos3i(GLint, GLint, GLint);
    GLvoid glRasterPos3s(GLshort, GLshort, GLshort);
    GLvoid glRasterPos4d(GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glRasterPos4f(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glRasterPos4i(GLint, GLint, GLint, GLint);
    GLvoid glRasterPos4s(GLshort, GLshort, GLshort, GLshort);
    GLvoid glRasterPos2dv(GLdouble*);
    GLvoid glRasterPos2fv(GLfloat*);
    GLvoid glRasterPos2iv(GLint*);
    GLvoid glRasterPos2sv(GLshort*);
    GLvoid glRasterPos3dv(GLdouble*);
    GLvoid glRasterPos3fv(GLfloat*);
    GLvoid glRasterPos3iv(GLint*);
    GLvoid glRasterPos3sv(GLshort*);
    GLvoid glRasterPos4dv(GLdouble*);
    GLvoid glRasterPos4fv(GLfloat*);
    GLvoid glRasterPos4iv(GLint*);
    GLvoid glRasterPos4sv(GLshort*);
    GLvoid glRectd(GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glRectf(GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glRecti(GLint, GLint, GLint, GLint);
    GLvoid glRects(GLshort, GLshort, GLshort, GLshort);
    GLvoid glRectdv(GLdouble*, GLdouble*);
    GLvoid glRectfv(GLfloat*, GLfloat*);
    GLvoid glRectiv(GLint*, GLint*);
    GLvoid glRectsv(GLshort*, GLshort*);
    GLvoid glVertexPointer(GLint, GLenum, GLsizei stride, GLvoid*);
    GLvoid glNormalPointer(GLenum, GLsizei, GLvoid*);
    GLvoid glColorPointer(GLint, GLenum, GLsizei, GLvoid*);
    GLvoid glIndexPointer(GLenum, GLsizei, GLvoid*);
    GLvoid glTexCoordPointer(GLint, GLenum, GLsizei stride, GLvoid* ptr);
    GLvoid glEdgeFlagPointer(GLsizei, GLvoid* ptr);
    GLvoid glGetPointerv(GLenum, GLvoid**);
    GLvoid glArrayElement(GLint);
    GLvoid glDrawArrays(GLenum, GLint, GLsizei);
    GLvoid glDrawElements(GLenum, GLsizei, GLenum, GLvoid*);
    GLvoid glInterleavedArrays(GLenum, GLsizei, GLvoid*);
    GLvoid glShadeModel(GLenum);
    GLvoid glLightf(GLenum, GLenum, GLfloat);
    GLvoid glLighti(GLenum, GLenum, GLint);
    GLvoid glLightfv(GLenum, GLenum, GLfloat*);
    GLvoid glLightiv(GLenum, GLenum, GLint*);
    GLvoid glGetLightfv(GLenum, GLenum, GLfloat*);
    GLvoid glGetLightiv(GLenum, GLenum, GLint*);
    GLvoid glLightModelf(GLenum, GLfloat);
    GLvoid glLightModeli(GLenum, GLint);
    GLvoid glLightModelfv(GLenum, GLfloat*);
    GLvoid glLightModeliv(GLenum, GLint*);
    GLvoid glMaterialf(GLenum, GLenum, GLfloat);
    GLvoid glMateriali(GLenum, GLenum, GLint);
    GLvoid glMaterialfv(GLenum, GLenum, GLfloat*);
    GLvoid glMaterialiv(GLenum, GLenum, GLint*);
    GLvoid glGetMaterialfv(GLenum, GLenum, GLfloat*);
    GLvoid glGetMaterialiv(GLenum, GLenum, GLint*);
    GLvoid glColorMaterial(GLenum, GLenum);
    GLvoid glPixelZoom(GLfloat, GLfloat);
    GLvoid glPixelStoref(GLenum, GLfloat);
    GLvoid glPixelStorei(GLenum, GLint);
    GLvoid glPixelTransferf(GLenum, GLfloat);
    GLvoid glPixelTransferi(GLenum, GLint);
    GLvoid glPixelMapfv(GLenum, GLsizei, GLfloat*);
    GLvoid glPixelMapuiv(GLenum, GLsizei, GLuint*);
    GLvoid glPixelMapusv(GLenum, GLsizei, GLushort*);
    GLvoid glGetPixelMapfv(GLenum, GLfloat*);
    GLvoid glGetPixelMapuiv(GLenum, GLuint*);
    GLvoid glGetPixelMapusv(GLenum, GLushort*);
    GLvoid glBitmap(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
    GLvoid glReadPixels(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
    GLvoid glDrawPixels(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
    GLvoid glCopyPixels(GLint, GLint, GLsizei, GLsizei, GLenum);
    GLvoid glStencilFunc(GLenum, GLint, GLuint);
    GLvoid glStencilMask(GLuint);
    GLvoid glStencilOp(GLenum, GLenum, GLenum);
    GLvoid glClearStencil(GLint);
    GLvoid glTexGend(GLenum, GLenum, GLdouble);
    GLvoid glTexGenf(GLenum, GLenum, GLfloat);
    GLvoid glTexGeni(GLenum, GLenum, GLint);
    GLvoid glTexGendv(GLenum, GLenum, GLdouble*);
    GLvoid glTexGenfv(GLenum, GLenum, GLfloat*);
    GLvoid glTexGeniv(GLenum, GLenum, GLint*);
    GLvoid glGetTexGendv(GLenum, GLenum, GLdouble*);
    GLvoid glGetTexGenfv(GLenum, GLenum, GLfloat*);
    GLvoid glGetTexGeniv(GLenum, GLenum, GLint*);
    GLvoid glTexEnvf(GLenum, GLenum, GLfloat);
    GLvoid glTexEnvi(GLenum, GLenum, GLint);
    GLvoid glTexEnvfv(GLenum, GLenum, GLfloat*);
    GLvoid glTexEnviv(GLenum, GLenum, GLint*);
    GLvoid glGetTexEnvfv(GLenum, GLenum, GLfloat*);
    GLvoid glGetTexEnviv(GLenum, GLenum, GLint*);
    GLvoid glTexParameterf(GLenum, GLenum, GLfloat);
    GLvoid glTexParameteri(GLenum, GLenum, GLint);
    GLvoid glTexParameterfv(GLenum, GLenum, GLfloat*);
    GLvoid glTexParameteriv(GLenum, GLenum, GLint*);
    GLvoid glGetTexParameterfv(GLenum, GLenum, GLfloat*);
    GLvoid glGetTexParameteriv(GLenum, GLenum, GLint*);
    GLvoid glGetTexLevelParameterfv(GLenum, GLint, GLenum, GLfloat*);
    GLvoid glGetTexLevelParameteriv(GLenum, GLint, GLenum, GLint*);
    GLvoid glTexImage1D(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
    GLvoid glTexImage2D(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
    GLvoid glGetTexImage(GLenum, GLint, GLenum, GLenum, GLvoid*);
    GLvoid glMap1d(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
    GLvoid glMap1f(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
    GLvoid glMap2d(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
    GLvoid glMap2f(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
    GLvoid glGetMapdv(GLenum, GLenum, GLdouble*);
    GLvoid glGetMapfv(GLenum, GLenum, GLfloat*);
    GLvoid glGetMapiv(GLenum, GLenum, GLint*);
    GLvoid glEvalCoord1d(GLdouble);
    GLvoid glEvalCoord1f(GLfloat);
    GLvoid glEvalCoord1dv(GLdouble*);
    GLvoid glEvalCoord1fv(GLfloat*);
    GLvoid glEvalCoord2d(GLdouble, GLdouble);
    GLvoid glEvalCoord2f(GLfloat, GLfloat);
    GLvoid glEvalCoord2dv(GLdouble*);
    GLvoid glEvalCoord2fv(GLfloat*);
    GLvoid glMapGrid1d(GLint, GLdouble, GLdouble);
    GLvoid glMapGrid1f(GLint, GLfloat, GLfloat);
    GLvoid glMapGrid2d(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
    GLvoid glMapGrid2f(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
    GLvoid glEvalPoint1(GLint);
    GLvoid glEvalPoint2(GLint, GLint);
    GLvoid glEvalMesh1(GLenum, GLint, GLint);
    GLvoid glEvalMesh2(GLenum, GLint, GLint, GLint, GLint);
    GLvoid glFogf(GLenum, GLfloat);
    GLvoid glFogi(GLenum, GLint);
    GLvoid glFogfv(GLenum, GLfloat*);
    GLvoid glFogiv(GLenum, GLint*);
    GLvoid glFeedbackBuffer(GLsizei, GLenum, GLfloat*);
    GLvoid glPassThrough(GLfloat);
    GLvoid glSelectBuffer(GLsizei, GLuint*);
    GLvoid glInitNames();
    GLvoid glLoadName(GLuint);
    GLvoid glPushName(GLuint);
    GLvoid glPopName();
    GLvoid glGenTextures(GLsizei, GLuint*);
    GLvoid glDeleteTextures(GLsizei, GLuint*);
    GLvoid glBindTexture(GLenum, GLuint);
    GLvoid glPrioritizeTextures(GLsizei, GLuint*, GLclampf*);
    GLboolean glAreTexturesResident(GLsizei, GLuint*, GLboolean*);
    GLboolean glIsTexture(GLuint);
    GLvoid glTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
    GLvoid glTexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
    GLvoid glCopyTexImage1D(GLenum, GLint, GLenum internalformat, GLint, GLint, GLsizei, GLint);
    GLvoid glCopyTexImage2D(GLenum, GLint, GLenum internalformat, GLint, GLint, GLsizei, GLsizei, GLint);
    GLvoid glCopyTexSubImage1D(GLenum, GLint, GLint, GLint, GLint, GLsizei);
    GLvoid glCopyTexSubImage2D(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
    GLvoid glDrawRangeElements(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*);
    GLvoid glTexImage3D(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
    GLvoid glTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
    GLvoid glCopyTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
    GLvoid glActiveTexture(GLenum);
    GLvoid glClientActiveTexture(GLenum);
    GLvoid glMultiTexCoord1d(GLenum, GLdouble);
    GLvoid glMultiTexCoord1dv(GLenum, GLdouble*);
    GLvoid glMultiTexCoord1f(GLenum, GLfloat);
    GLvoid glMultiTexCoord1fv(GLenum, GLfloat*);
    GLvoid glMultiTexCoord1i(GLenum, GLint);
    GLvoid glMultiTexCoord1iv(GLenum, GLint*);
    GLvoid glMultiTexCoord1s(GLenum, GLshort);
    GLvoid glMultiTexCoord1sv(GLenum, GLshort*);
    GLvoid glMultiTexCoord2d(GLenum, GLdouble, GLdouble);
    GLvoid glMultiTexCoord2dv(GLenum, GLdouble*);
    GLvoid glMultiTexCoord2f(GLenum, GLfloat, GLfloat);
    GLvoid glMultiTexCoord2fv(GLenum, GLfloat*);
    GLvoid glMultiTexCoord2i(GLenum, GLint, GLint);
    GLvoid glMultiTexCoord2iv(GLenum, GLint*);
    GLvoid glMultiTexCoord2s(GLenum, GLshort, GLshort);
    GLvoid glMultiTexCoord2sv(GLenum, GLshort*);
    GLvoid glMultiTexCoord3d(GLenum, GLdouble, GLdouble, GLdouble);
    GLvoid glMultiTexCoord3dv(GLenum, GLdouble*);
    GLvoid glMultiTexCoord3f(GLenum, GLfloat, GLfloat, GLfloat);
    GLvoid glMultiTexCoord3fv(GLenum, GLfloat*);
    GLvoid glMultiTexCoord3i(GLenum, GLint, GLint, GLint);
    GLvoid glMultiTexCoord3iv(GLenum, GLint*);
    GLvoid glMultiTexCoord3s(GLenum, GLshort, GLshort, GLshort);
    GLvoid glMultiTexCoord3sv(GLenum, GLshort*);
    GLvoid glMultiTexCoord4d(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glMultiTexCoord4dv(GLenum, GLdouble*);
    GLvoid glMultiTexCoord4f(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glMultiTexCoord4fv(GLenum, GLfloat*);
    GLvoid glMultiTexCoord4i(GLenum, GLint, GLint, GLint, GLint);
    GLvoid glMultiTexCoord4iv(GLenum, GLint*);
    GLvoid glMultiTexCoord4s(GLenum, GLshort, GLshort, GLshort, GLshort);
    GLvoid glMultiTexCoord4sv(GLenum, GLshort*);
    GLvoid glLoadTransposeMatrixd(GLdouble[16]);
    GLvoid glLoadTransposeMatrixf(GLfloat[16]);
    GLvoid glMultTransposeMatrixd(GLdouble[16]);
    GLvoid glMultTransposeMatrixf(GLfloat[16]);
    GLvoid glSampleCoverage(GLclampf, GLboolean);
    GLvoid glCompressedTexImage1D(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
    GLvoid glCompressedTexImage2D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
    GLvoid glCompressedTexImage3D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei depth, GLint, GLsizei, GLvoid*);
    GLvoid glCompressedTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
    GLvoid glCompressedTexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
    GLvoid glCompressedTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
    GLvoid glGetCompressedTexImage(GLenum, GLint, GLvoid*);
    GLvoid glBlendFuncSeparate(GLenum, GLenum, GLenum, GLenum);
    GLvoid glFogCoordf(GLfloat);
    GLvoid glFogCoordfv(GLfloat*);
    GLvoid glFogCoordd(GLdouble);
    GLvoid glFogCoorddv(GLdouble*);
    GLvoid glFogCoordPointer(GLenum, GLsizei,GLvoid*);
    GLvoid glMultiDrawArrays(GLenum, GLint*, GLsizei*, GLsizei);
    GLvoid glMultiDrawElements(GLenum, GLsizei*, GLenum, GLvoid**, GLsizei);
    GLvoid glPointParameterf(GLenum, GLfloat);
    GLvoid glPointParameterfv(GLenum, GLfloat*);
    GLvoid glPointParameteri(GLenum, GLint);
    GLvoid glPointParameteriv(GLenum, GLint*);
    GLvoid glSecondaryColor3b(GLbyte, GLbyte, GLbyte);
    GLvoid glSecondaryColor3bv(GLbyte*);
    GLvoid glSecondaryColor3d(GLdouble, GLdouble, GLdouble);
    GLvoid glSecondaryColor3dv(GLdouble*);
    GLvoid glSecondaryColor3f(GLfloat, GLfloat, GLfloat);
    GLvoid glSecondaryColor3fv(GLfloat*);
    GLvoid glSecondaryColor3i(GLint, GLint, GLint);
    GLvoid glSecondaryColor3iv(GLint*);
    GLvoid glSecondaryColor3s(GLshort, GLshort, GLshort);
    GLvoid glSecondaryColor3sv(GLshort*);
    GLvoid glSecondaryColor3ub(GLubyte, GLubyte, GLubyte);
    GLvoid glSecondaryColor3ubv(GLubyte*);
    GLvoid glSecondaryColor3ui(GLuint, GLuint, GLuint);
    GLvoid glSecondaryColor3uiv(GLuint*);
    GLvoid glSecondaryColor3us(GLushort, GLushort, GLushort);
    GLvoid glSecondaryColor3usv(GLushort*);
    GLvoid glSecondaryColorPointer(GLint, GLenum, GLsizei, GLvoid*);
    GLvoid glWindowPos2d(GLdouble, GLdouble);
    GLvoid glWindowPos2dv(GLdouble*);
    GLvoid glWindowPos2f(GLfloat, GLfloat);
    GLvoid glWindowPos2fv(GLfloat*);
    GLvoid glWindowPos2i(GLint, GLint);
    GLvoid glWindowPos2iv(GLint*);
    GLvoid glWindowPos2s(GLshort, GLshort);
    GLvoid glWindowPos2sv(GLshort*);
    GLvoid glWindowPos3d(GLdouble, GLdouble, GLdouble);
    GLvoid glWindowPos3dv(GLdouble*);
    GLvoid glWindowPos3f(GLfloat, GLfloat, GLfloat);
    GLvoid glWindowPos3fv(GLfloat*);
    GLvoid glWindowPos3i(GLint, GLint, GLint);
    GLvoid glWindowPos3iv(GLint*);
    GLvoid glWindowPos3s(GLshort, GLshort, GLshort);
    GLvoid glWindowPos3sv(GLshort*);
    GLvoid glGenQueries(GLsizei, GLuint*);
    GLvoid glDeleteQueries(GLsizei,GLuint*);
    GLboolean glIsQuery(GLuint);
    GLvoid glBeginQuery(GLenum, GLuint);
    GLvoid glEndQuery(GLenum);
    GLvoid glGetQueryiv(GLenum, GLenum, GLint*);
    GLvoid glGetQueryObjectiv(GLuint, GLenum, GLint*);
    GLvoid glGetQueryObjectuiv(GLuint, GLenum, GLuint*);
    GLvoid glBindBuffer(GLenum, GLuint);
    GLvoid glDeleteBuffers(GLsizei, GLuint*);
    GLvoid glGenBuffers(GLsizei, GLuint*);
    GLboolean glIsBuffer(GLuint);
    GLvoid glBufferData(GLenum, GLsizeiptr, GLvoid*, GLenum);
    GLvoid glBufferSubData(GLenum, GLintptr, GLsizeiptr,GLvoid*);
    GLvoid glGetBufferSubData(GLenum, GLintptr, GLsizeiptr, GLvoid*);
    GLvoid* glMapBuffer(GLenum, GLenum);
    GLboolean glUnmapBuffer(GLenum);
    GLvoid glGetBufferParameteriv(GLenum, GLenum, GLint*);
    GLvoid glGetBufferPointerv(GLenum, GLenum, GLvoid**);
    GLvoid glBlendEquationSeparate(GLenum, GLenum);
    GLvoid glDrawBuffers(GLsizei, GLenum*);
    GLvoid glStencilOpSeparate(GLenum, GLenum, GLenum, GLenum);
    GLvoid glStencilFuncSeparate(GLenum, GLenum, GLint, GLuint);
    GLvoid glStencilMaskSeparate(GLenum, GLuint);
    GLvoid glAttachShader(GLuint, GLuint);
    GLvoid glBindAttribLocation(GLuint, GLuint, GLchar*);
    GLvoid glCompileShader(GLuint);
    GLuint glCreateProgram();
    GLuint glCreateShader(GLenum);
    GLvoid glDeleteProgram(GLuint);
    GLvoid glDeleteShader(GLuint);
    GLvoid glDetachShader(GLuint, GLuint);
    GLvoid glDisableVertexAttribArray(GLuint);
    GLvoid glEnableVertexAttribArray(GLuint);
    GLvoid glGetActiveAttrib(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
    GLvoid glGetActiveUniform(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
    GLvoid glGetAttachedShaders(GLuint, GLsizei, GLsizei*, GLuint*);
    GLint glGetAttribLocation(GLuint, GLchar*);
    GLvoid glGetProgramiv(GLuint, GLenum, GLint*);
    GLvoid glGetProgramInfoLog(GLuint, GLsizei, GLsizei*, GLchar*);
    GLvoid glGetShaderiv(GLuint, GLenum, GLint *);
    GLvoid glGetShaderInfoLog(GLuint, GLsizei, GLsizei*, GLchar*);
    GLvoid glGetShaderSource(GLuint, GLsizei, GLsizei*, GLchar*);
    GLint glGetUniformLocation(GLuint, GLchar*);
    GLvoid glGetUniformfv(GLuint, GLint, GLfloat*);
    GLvoid glGetUniformiv(GLuint, GLint, GLint*);
    GLvoid glGetVertexAttribdv(GLuint, GLenum, GLdouble*);
    GLvoid glGetVertexAttribfv(GLuint, GLenum, GLfloat*);
    GLvoid glGetVertexAttribiv(GLuint, GLenum, GLint*);
    GLvoid glGetVertexAttribPointerv(GLuint, GLenum, GLvoid**);
    GLboolean glIsProgram(GLuint);
    GLboolean glIsShader(GLuint);
    GLvoid glLinkProgram(GLuint);
    GLvoid glShaderSource(GLuint, GLsizei, GLchar**, GLint*);
    GLvoid glUseProgram(GLuint);
    GLvoid glUniform1f(GLint, GLfloat);
    GLvoid glUniform2f(GLint, GLfloat, GLfloat);
    GLvoid glUniform3f(GLint, GLfloat, GLfloat, GLfloat);
    GLvoid glUniform4f(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glUniform1i(GLint, GLint);
    GLvoid glUniform2i(GLint, GLint, GLint);
    GLvoid glUniform3i(GLint, GLint, GLint, GLint);
    GLvoid glUniform4i(GLint, GLint, GLint, GLint, GLint);
    GLvoid glUniform1fv(GLint, GLsizei, GLfloat*);
    GLvoid glUniform2fv(GLint, GLsizei, GLfloat*);
    GLvoid glUniform3fv(GLint, GLsizei, GLfloat*);
    GLvoid glUniform4fv(GLint, GLsizei, GLfloat*);
    GLvoid glUniform1iv(GLint, GLsizei, GLint*);
    GLvoid glUniform2iv(GLint, GLsizei, GLint*);
    GLvoid glUniform3iv(GLint, GLsizei, GLint*);
    GLvoid glUniform4iv(GLint, GLsizei, GLint*);
    GLvoid glUniformMatrix2fv(GLint, GLsizei, GLboolean, GLfloat*);
    GLvoid glUniformMatrix3fv(GLint, GLsizei, GLboolean, GLfloat*);
    GLvoid glUniformMatrix4fv(GLint, GLsizei, GLboolean, GLfloat*);
    GLvoid glValidateProgram(GLuint);
    GLvoid glVertexAttrib1d(GLuint, GLdouble);
    GLvoid glVertexAttrib1dv(GLuint, GLdouble*);
    GLvoid glVertexAttrib1f(GLuint, GLfloat);
    GLvoid glVertexAttrib1fv(GLuint, GLfloat*);
    GLvoid glVertexAttrib1s(GLuint, GLshort);
    GLvoid glVertexAttrib1sv(GLuint, GLshort*);
    GLvoid glVertexAttrib2d(GLuint, GLdouble, GLdouble);
    GLvoid glVertexAttrib2dv(GLuint, GLdouble*);
    GLvoid glVertexAttrib2f(GLuint, GLfloat, GLfloat);
    GLvoid glVertexAttrib2fv(GLuint, GLfloat*);
    GLvoid glVertexAttrib2s(GLuint, GLshort, GLshort);
    GLvoid glVertexAttrib2sv(GLuint, GLshort*);
    GLvoid glVertexAttrib3d(GLuint, GLdouble, GLdouble, GLdouble);
    GLvoid glVertexAttrib3dv(GLuint, GLdouble*);
    GLvoid glVertexAttrib3f(GLuint, GLfloat, GLfloat, GLfloat);
    GLvoid glVertexAttrib3fv(GLuint, GLfloat*);
    GLvoid glVertexAttrib3s(GLuint, GLshort, GLshort, GLshort);
    GLvoid glVertexAttrib3sv(GLuint, GLshort*);
    GLvoid glVertexAttrib4Nbv(GLuint, GLbyte*);
    GLvoid glVertexAttrib4Niv(GLuint, GLint*);
    GLvoid glVertexAttrib4Nsv(GLuint, GLshort*);
    GLvoid glVertexAttrib4Nub(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
    GLvoid glVertexAttrib4Nubv(GLuint, GLubyte*);
    GLvoid glVertexAttrib4Nuiv(GLuint, GLuint*);
    GLvoid glVertexAttrib4Nusv(GLuint, GLushort*);
    GLvoid glVertexAttrib4bv(GLuint, GLbyte*);
    GLvoid glVertexAttrib4d(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
    GLvoid glVertexAttrib4dv(GLuint, GLdouble*);
    GLvoid glVertexAttrib4f(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
    GLvoid glVertexAttrib4fv(GLuint, GLfloat*);
    GLvoid glVertexAttrib4iv(GLuint, GLint*);
    GLvoid glVertexAttrib4s(GLuint, GLshort, GLshort, GLshort, GLshort);
    GLvoid glVertexAttrib4sv(GLuint, GLshort*);
    GLvoid glVertexAttrib4ubv(GLuint, GLubyte*);
    GLvoid glVertexAttrib4uiv(GLuint, GLuint*);
    GLvoid glVertexAttrib4usv(GLuint, GLushort*);
    GLvoid glVertexAttribPointer(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*);
}
