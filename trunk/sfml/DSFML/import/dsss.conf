version (Ddoc){
    [dsfml]
    target = tempdsfml
    buildflags += -D -Dd..\doc
    exclude += dsfml/audio/loader.d
    exclude += dsfml/audio/all.d
    exclude += dsfml/audio/external.d
    exclude += dsfml/graphics/loader.d
    exclude += dsfml/graphics/all.d
    exclude += dsfml/graphics/external.d
    exclude += dsfml/network/loader.d
    exclude += dsfml/network/all.d
    exclude += dsfml/network/external.d
    exclude += dsfml/system/loader.d
    exclude += dsfml/system/all.d
    exclude += dsfml/system/dllloader.d
    exclude += dsfml/system/external.d
    exclude += dsfml/system/pointerchecker.d
    exclude += dsfml/system/stringutil.d
    exclude += dsfml/window/loader.d
    exclude += dsfml/window/all.d
    exclude += dsfml/window/external.d
}else{
    [dsfml/audio]
    type = library
    version (!Dynamic){
        exclude += dsfml/audio/loader.d
    }
    target = dsfml-audio
    version (Windows){
        postbuild += move "dsfml-audio.lib" "../lib/dsfml-audio.lib"
    } else version (linux){
        postbuild += mv -f "libdsfml-audio.a" "../lib/libdsfml-audio.a"
    }
    
    [dsfml/network]
    type = library
    version (!Dynamic){
        exclude += dsfml/network/loader.d
    }
    target = dsfml-network
    version (Windows){
        postbuild += move "dsfml-network.lib" "../lib/dsfml-network.lib"
    } else version (linux){
        postbuild += mv -f "libdsfml-network.a" "../lib/libdsfml-network.a"
    }
    
    [dsfml/graphics]
    type = library
    version (!Dynamic){
        exclude += dsfml/graphics/loader.d
    }
    target = dsfml-graphics
    version (Windows){
        postbuild += move "dsfml-graphics.lib" "../lib/dsfml-graphics.lib"
    } else version (linux){
        postbuild += mv -f "libdsfml-graphics.a" "../lib/libdsfml-graphics.a"
    }
    
    [dsfml/system]
    type = library
    version (!Dynamic){
        exclude += dsfml/system/loader.d
        exclude += dsfml/system/dllloader.d
    }
    target = dsfml-system
    version (Windows){
        postbuild += move "dsfml-system.lib" "../lib/dsfml-system.lib"
    } else version (linux){
        postbuild += mv -f "libdsfml-system.a" "../lib/libdsfml-system.a"
    }
    
    [dsfml/window]
    type = library
    version (!Dynamic){
        exclude += dsfml/window/loader.d
    }
    target = dsfml-window
    version (Windows){
        postbuild += move "dsfml-window.lib" "../lib/dsfml-window.lib"
    } else version (linux){
        postbuild += mv -f "libdsfml-window.a" "../lib/libdsfml-window.a"
    }
}

exclude += dsfml/GL


